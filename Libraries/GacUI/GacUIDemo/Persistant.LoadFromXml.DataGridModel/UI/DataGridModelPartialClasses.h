/***********************************************************************
Vczh Library++ 3.0
Developer: Zihan Chen(vczh)
GacUI::Partial Classes

This file is generated by: Vczh GacUI Resource Code Generator
************************************************************************
DO NOT MODIFY
***********************************************************************/

#ifndef VCZH_GACUI_RESOURCE_CODE_GENERATOR_DataGridModel_PARTIAL_CLASSES
#define VCZH_GACUI_RESOURCE_CODE_GENERATOR_DataGridModel_PARTIAL_CLASSES

#include "..\..\..\Public\Source\GacUIReflection.h"

namespace demos
{
	class DataGridModelItem;
	class IDataGridModel;
	class BoldTextTemplate;
	class CellBorderTemplate;
	class MainWindow;
	class NameEditor;
	class NormalTextTemplate;
	class TitleEditor;

	class DataGridModelItem : public vl::Object, public vl::reflection::Description<DataGridModelItem>
	{
	public:
		vl::WString name;
		vl::WString organization;
		vl::WString title;
	};

	class IDataGridModel : public virtual vl::reflection::IDescriptable, public vl::reflection::Description<IDataGridModel>
	{
	public:

		virtual vl::collections::List<vl::WString>& GetTitles() = 0;

		virtual vl::collections::List<vl::Ptr<demos::DataGridModelItem>>& GetPeople() = 0;
	};

	template<typename TImpl>
	class BoldTextTemplate_ : public vl::presentation::templates::GuiGridVisualizerTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiGridVisualizerTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiGridVisualizerTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		BoldTextTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiGridVisualizerTemplate>(L"demos::BoldTextTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class CellBorderTemplate_ : public vl::presentation::templates::GuiGridVisualizerTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiGridVisualizerTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* decorated;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(decorated);
			}
			else
			{
			}
		}
	public:
		CellBorderTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiGridVisualizerTemplate>(L"demos::CellBorderTemplate")
			,decorated(0)
		{
		}
	};

	template<typename TImpl>
	class MainWindow_ : public vl::presentation::controls::GuiWindow, public vl::presentation::GuiInstancePartialClass<vl::presentation::controls::GuiWindow>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
		Ptr<demos::IDataGridModel> ViewModel_;
	protected:

		void InitializeComponents(Ptr<demos::IDataGridModel> ViewModel)
		{
			ViewModel_ = ViewModel;
			if (InitializeFromResource())
			{
			}
			else
			{
				ViewModel_ = 0;
			}
		}
	public:
		MainWindow_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::controls::GuiWindow>(L"demos::MainWindow")
			,vl::presentation::controls::GuiWindow(vl::presentation::theme::GetCurrentTheme()->CreateWindowStyle())
		{
		}

		Ptr<demos::IDataGridModel> GetViewModel()
		{
			return ViewModel_;
		}
	};

	template<typename TImpl>
	class NameEditor_ : public vl::presentation::templates::GuiGridEditorTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiGridEditorTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
		Ptr<demos::IDataGridModel> ViewModel_;
	protected:
		vl::presentation::templates::GuiGridEditorTemplate* self;
		vl::presentation::controls::GuiSinglelineTextBox* textBoxName;

		void InitializeComponents(Ptr<demos::IDataGridModel> ViewModel)
		{
			ViewModel_ = ViewModel;
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
				GUI_INSTANCE_REFERENCE(textBoxName);
			}
			else
			{
				ViewModel_ = 0;
			}
		}
	public:
		NameEditor_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiGridEditorTemplate>(L"demos::NameEditor")
			,self(0)
			,textBoxName(0)
		{
		}

		Ptr<demos::IDataGridModel> GetViewModel()
		{
			return ViewModel_;
		}
	};

	template<typename TImpl>
	class NormalTextTemplate_ : public vl::presentation::templates::GuiGridVisualizerTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiGridVisualizerTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiGridVisualizerTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		NormalTextTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiGridVisualizerTemplate>(L"demos::NormalTextTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class TitleEditor_ : public vl::presentation::templates::GuiGridEditorTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiGridEditorTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
		Ptr<demos::IDataGridModel> ViewModel_;
	protected:
		vl::presentation::controls::GuiComboBoxListControl* comboBoxTitle;
		vl::presentation::templates::GuiGridEditorTemplate* self;

		void InitializeComponents(Ptr<demos::IDataGridModel> ViewModel)
		{
			ViewModel_ = ViewModel;
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(comboBoxTitle);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
				ViewModel_ = 0;
			}
		}
	public:
		TitleEditor_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiGridEditorTemplate>(L"demos::TitleEditor")
			,comboBoxTitle(0)
			,self(0)
		{
		}

		Ptr<demos::IDataGridModel> GetViewModel()
		{
			return ViewModel_;
		}
	};

}
namespace vl
{
	namespace reflection
	{
		namespace description
		{
			DECL_TYPE_INFO(demos::DataGridModelItem)
			DECL_TYPE_INFO(demos::IDataGridModel)
			DECL_TYPE_INFO(demos::BoldTextTemplate)
			DECL_TYPE_INFO(demos::CellBorderTemplate)
			DECL_TYPE_INFO(demos::MainWindow)
			DECL_TYPE_INFO(demos::NameEditor)
			DECL_TYPE_INFO(demos::NormalTextTemplate)
			DECL_TYPE_INFO(demos::TitleEditor)

		}
	}
}
namespace demos
{
	class BoldTextTemplate : public demos::BoldTextTemplate_<demos::BoldTextTemplate>
	{
		friend class demos::BoldTextTemplate_<demos::BoldTextTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::BoldTextTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		BoldTextTemplate();
	};
}


namespace demos
{
	class CellBorderTemplate : public demos::CellBorderTemplate_<demos::CellBorderTemplate>
	{
		friend class demos::CellBorderTemplate_<demos::CellBorderTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::CellBorderTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		CellBorderTemplate();
	};
}


namespace demos
{
	class NameEditor : public demos::NameEditor_<demos::NameEditor>
	{
		friend class demos::NameEditor_<demos::NameEditor>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::NameEditor>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		NameEditor(Ptr<demos::IDataGridModel> ViewModel);
	};
}


namespace demos
{
	class NormalTextTemplate : public demos::NormalTextTemplate_<demos::NormalTextTemplate>
	{
		friend class demos::NormalTextTemplate_<demos::NormalTextTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::NormalTextTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		NormalTextTemplate();
	};
}


namespace demos
{
	class TitleEditor : public demos::TitleEditor_<demos::TitleEditor>
	{
		friend class demos::TitleEditor_<demos::TitleEditor>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TitleEditor>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TitleEditor(Ptr<demos::IDataGridModel> ViewModel);
	};
}



#endif
