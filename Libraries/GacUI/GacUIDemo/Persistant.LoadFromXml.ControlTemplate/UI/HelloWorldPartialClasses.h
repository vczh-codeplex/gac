/***********************************************************************
Vczh Library++ 3.0
Developer: Zihan Chen(vczh)
GacUI::Partial Classes

This file is generated by: Vczh GacUI Resource Code Generator
************************************************************************
DO NOT MODIFY
***********************************************************************/

#ifndef VCZH_GACUI_RESOURCE_CODE_GENERATOR_HelloWorld_PARTIAL_CLASSES
#define VCZH_GACUI_RESOURCE_CODE_GENERATOR_HelloWorld_PARTIAL_CLASSES

#include "..\..\..\Public\Source\GacUIReflection.h"

namespace darkskin
{
	class BottomScrollButtonTemplate;
	class ButtonTemplate;
	class CheckBoxTemplate;
	class CheckItemBackgroundTemplate;
	class CheckTextListTemplate;
	class ComboBoxTemplate;
	class DatePickerTemplate;
	class DocumentLabelTemplate;
	class DocumentViewerTemplate;
	class ExpandingDecoratorTemplate;
	class GroupBoxTemplate;
	class HScrollHandleTemplate;
	class HScrollTemplate;
	class HTrackerTemplate;
	class ItemBackgroundTemplate;
	class LabelTemplate;
	class LeftScrollButtonTemplate;
	class ListViewColumnHeaderTemplate;
	class ListViewTemplate;
	class MenuBarButtonTemplate;
	class MenuItemButtonTemplate;
	class MenuSplitterTemplate;
	class MultilineTextBoxTemplate;
	class ProgressBarTemplate;
	class RadioButtonTemplate;
	class RadioTextListTemplate;
	class RightScrollButtonTemplate;
	class ScrollViewTemplate;
	class SinglelineTextBoxTemplate;
	class TabDropdownTemplate;
	class TabHeaderTemplate;
	class TabTemplate;
	class TextListTemplate;
	class ToolstripButtonTemplate;
	class ToolstripDropdownButtonTemplate;
	class ToolstripMenuTemplate;
	class ToolstripSplitArrowTemplate;
	class ToolstripSplitButtonTemplate;
	class ToolstripSplitterTemplate;
	class ToolstripTemplate;
	class TooltipTemplate;
	class TopScrollButtonTemplate;
	class TreeViewTemplate;
	class VScrollHandleTemplate;
	class VScrollTemplate;
	class VTrackerTemplate;
	class WindowTemplate;
}
namespace demos
{
	class MainWindow;

}
namespace darkskin
{
	template<typename TImpl>
	class BottomScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		BottomScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"darkskin::BottomScrollButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"darkskin::ButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class CheckBoxTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		CheckBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"darkskin::CheckBoxTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class CheckItemBackgroundTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		CheckItemBackgroundTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"darkskin::CheckItemBackgroundTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class CheckTextListTemplate_ : public vl::presentation::templates::GuiTextListTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTextListTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		CheckTextListTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>(L"darkskin::CheckTextListTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ComboBoxTemplate_ : public vl::presentation::templates::GuiDateComboBoxTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDateComboBoxTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiDateComboBoxTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ComboBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDateComboBoxTemplate>(L"darkskin::ComboBoxTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class DatePickerTemplate_ : public vl::presentation::templates::GuiDatePickerTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDatePickerTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiDatePickerTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		DatePickerTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDatePickerTemplate>(L"darkskin::DatePickerTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class DocumentLabelTemplate_ : public vl::presentation::templates::GuiDocumentLabelTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDocumentLabelTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiDocumentLabelTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		DocumentLabelTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDocumentLabelTemplate>(L"darkskin::DocumentLabelTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class DocumentViewerTemplate_ : public vl::presentation::templates::GuiDocumentViewerTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDocumentViewerTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiDocumentViewerTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		DocumentViewerTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDocumentViewerTemplate>(L"darkskin::DocumentViewerTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ExpandingDecoratorTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ExpandingDecoratorTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"darkskin::ExpandingDecoratorTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class GroupBoxTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiControlTemplate* self;
		vl::presentation::compositions::GuiBoundsComposition* titleBounds;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
				GUI_INSTANCE_REFERENCE(titleBounds);
			}
			else
			{
			}
		}
	public:
		GroupBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"darkskin::GroupBoxTemplate")
			,container(0)
			,self(0)
			,titleBounds(0)
		{
		}
	};

	template<typename TImpl>
	class HScrollHandleTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		HScrollHandleTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"darkskin::HScrollHandleTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class HScrollTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiPartialViewComposition* handle;
		vl::presentation::compositions::GuiBoundsComposition* handleContainer;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(handleContainer);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		HScrollTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"darkskin::HScrollTemplate")
			,handle(0)
			,handleContainer(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class HTrackerTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* handle;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		HTrackerTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"darkskin::HTrackerTemplate")
			,handle(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ItemBackgroundTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ItemBackgroundTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"darkskin::ItemBackgroundTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class LabelTemplate_ : public vl::presentation::templates::GuiLabelTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiLabelTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiLabelTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		LabelTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiLabelTemplate>(L"darkskin::LabelTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class LeftScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		LeftScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"darkskin::LeftScrollButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ListViewColumnHeaderTemplate_ : public vl::presentation::templates::GuiListViewColumnHeaderTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewColumnHeaderTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::controls::GuiSelectableButton* buttonArrow;
		vl::presentation::templates::GuiListViewColumnHeaderTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(buttonArrow);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ListViewColumnHeaderTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewColumnHeaderTemplate>(L"darkskin::ListViewColumnHeaderTemplate")
			,buttonArrow(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ListViewTemplate_ : public vl::presentation::templates::GuiListViewTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiListViewTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ListViewTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewTemplate>(L"darkskin::ListViewTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class MenuBarButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		MenuBarButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"darkskin::MenuBarButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class MenuItemButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		MenuItemButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"darkskin::MenuItemButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class MenuSplitterTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
			}
			else
			{
			}
		}
	public:
		MenuSplitterTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"darkskin::MenuSplitterTemplate")
		{
		}
	};

	template<typename TImpl>
	class MultilineTextBoxTemplate_ : public vl::presentation::templates::GuiMultilineTextBoxTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMultilineTextBoxTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiMultilineTextBoxTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		MultilineTextBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMultilineTextBoxTemplate>(L"darkskin::MultilineTextBoxTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ProgressBarTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ProgressBarTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"darkskin::ProgressBarTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class RadioButtonTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		RadioButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"darkskin::RadioButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class RadioTextListTemplate_ : public vl::presentation::templates::GuiTextListTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTextListTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		RadioTextListTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>(L"darkskin::RadioTextListTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class RightScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		RightScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"darkskin::RightScrollButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ScrollViewTemplate_ : public vl::presentation::templates::GuiScrollViewTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollViewTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiScrollViewTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ScrollViewTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollViewTemplate>(L"darkskin::ScrollViewTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class SinglelineTextBoxTemplate_ : public vl::presentation::templates::GuiSinglelineTextBoxTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSinglelineTextBoxTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiSinglelineTextBoxTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		SinglelineTextBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSinglelineTextBoxTemplate>(L"darkskin::SinglelineTextBoxTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class TabDropdownTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TabDropdownTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"darkskin::TabDropdownTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class TabHeaderTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TabHeaderTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"darkskin::TabHeaderTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class TabTemplate_ : public vl::presentation::templates::GuiTabTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTabTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::compositions::GuiBoundsComposition* header;
		vl::presentation::templates::GuiTabTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(header);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TabTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTabTemplate>(L"darkskin::TabTemplate")
			,container(0)
			,header(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class TextListTemplate_ : public vl::presentation::templates::GuiTextListTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTextListTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TextListTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>(L"darkskin::TextListTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"darkskin::ToolstripButtonTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripDropdownButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripDropdownButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"darkskin::ToolstripDropdownButtonTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripMenuTemplate_ : public vl::presentation::templates::GuiMenuTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMenuTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
			}
			else
			{
			}
		}
	public:
		ToolstripMenuTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMenuTemplate>(L"darkskin::ToolstripMenuTemplate")
			,container(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripSplitArrowTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripSplitArrowTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"darkskin::ToolstripSplitArrowTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripSplitButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::controls::GuiSelectableButton* buttonArrow;
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(buttonArrow);
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripSplitButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"darkskin::ToolstripSplitButtonTemplate")
			,buttonArrow(0)
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripSplitterTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
			}
			else
			{
			}
		}
	public:
		ToolstripSplitterTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"darkskin::ToolstripSplitterTemplate")
		{
		}
	};

	template<typename TImpl>
	class ToolstripTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
			}
			else
			{
			}
		}
	public:
		ToolstripTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"darkskin::ToolstripTemplate")
		{
		}
	};

	template<typename TImpl>
	class TooltipTemplate_ : public vl::presentation::templates::GuiWindowTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiWindowTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
			}
			else
			{
			}
		}
	public:
		TooltipTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiWindowTemplate>(L"darkskin::TooltipTemplate")
			,container(0)
		{
		}
	};

	template<typename TImpl>
	class TopScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TopScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"darkskin::TopScrollButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class TreeViewTemplate_ : public vl::presentation::templates::GuiTreeViewTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTreeViewTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTreeViewTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TreeViewTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTreeViewTemplate>(L"darkskin::TreeViewTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class VScrollHandleTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		VScrollHandleTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"darkskin::VScrollHandleTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class VScrollTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiPartialViewComposition* handle;
		vl::presentation::compositions::GuiBoundsComposition* handleContainer;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(handleContainer);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		VScrollTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"darkskin::VScrollTemplate")
			,handle(0)
			,handleContainer(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class VTrackerTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* handle;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		VTrackerTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"darkskin::VTrackerTemplate")
			,handle(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class WindowTemplate_ : public vl::presentation::templates::GuiWindowTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiWindowTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiWindowTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		WindowTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiWindowTemplate>(L"darkskin::WindowTemplate")
			,container(0)
			,self(0)
		{
		}
	};

}
namespace demos
{
	template<typename TImpl>
	class MainWindow_ : public vl::presentation::controls::GuiWindow, public vl::presentation::GuiInstancePartialClass<vl::presentation::controls::GuiWindow>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::controls::GuiButton* buttonAddTab;
		vl::presentation::controls::GuiButton* buttonEnable;
		vl::presentation::controls::GuiComboBoxListControl* comboBoxSeasons;
		vl::presentation::controls::GuiToolstripCommand* commandEditCopy;
		vl::presentation::controls::GuiToolstripCommand* commandEditCut;
		vl::presentation::controls::GuiToolstripCommand* commandEditDelete;
		vl::presentation::controls::GuiToolstripCommand* commandEditPaste;
		vl::presentation::controls::GuiToolstripCommand* commandEditRedo;
		vl::presentation::controls::GuiToolstripCommand* commandEditSelect;
		vl::presentation::controls::GuiToolstripCommand* commandEditUndo;
		vl::presentation::controls::GuiToolstripCommand* commandFileExit;
		vl::presentation::controls::GuiToolstripCommand* commandFileNew;
		vl::presentation::controls::GuiToolstripCommand* commandFileNewRtf;
		vl::presentation::controls::GuiToolstripCommand* commandFileNewText;
		vl::presentation::controls::GuiToolstripCommand* commandFileOpen;
		vl::presentation::controls::GuiToolstripCommand* commandFileOpenRtf;
		vl::presentation::controls::GuiToolstripCommand* commandFileOpenText;
		vl::presentation::controls::GuiToolstripCommand* commandFilePrint;
		vl::presentation::controls::GuiToolstripCommand* commandFileSave;
		vl::presentation::controls::GuiToolstripCommand* commandFileSaveAs;
		vl::presentation::controls::GuiToolstripMenu* menuDropDown;
		vl::presentation::controls::GuiSelectableButton::MutexGroupController* radioGroup;
		vl::presentation::controls::GuiTab* tabControls;
		vl::presentation::controls::GuiTabPage* tabPageBasic;
		vl::presentation::controls::GuiTabPage* tabPageList;
		vl::presentation::controls::GuiTabPage* tabPageText;
		vl::presentation::controls::GuiTabPage* tabPageToolstrip;
		vl::presentation::controls::GuiScroll* tracker;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(buttonAddTab);
				GUI_INSTANCE_REFERENCE(buttonEnable);
				GUI_INSTANCE_REFERENCE(comboBoxSeasons);
				GUI_INSTANCE_REFERENCE(commandEditCopy);
				GUI_INSTANCE_REFERENCE(commandEditCut);
				GUI_INSTANCE_REFERENCE(commandEditDelete);
				GUI_INSTANCE_REFERENCE(commandEditPaste);
				GUI_INSTANCE_REFERENCE(commandEditRedo);
				GUI_INSTANCE_REFERENCE(commandEditSelect);
				GUI_INSTANCE_REFERENCE(commandEditUndo);
				GUI_INSTANCE_REFERENCE(commandFileExit);
				GUI_INSTANCE_REFERENCE(commandFileNew);
				GUI_INSTANCE_REFERENCE(commandFileNewRtf);
				GUI_INSTANCE_REFERENCE(commandFileNewText);
				GUI_INSTANCE_REFERENCE(commandFileOpen);
				GUI_INSTANCE_REFERENCE(commandFileOpenRtf);
				GUI_INSTANCE_REFERENCE(commandFileOpenText);
				GUI_INSTANCE_REFERENCE(commandFilePrint);
				GUI_INSTANCE_REFERENCE(commandFileSave);
				GUI_INSTANCE_REFERENCE(commandFileSaveAs);
				GUI_INSTANCE_REFERENCE(menuDropDown);
				GUI_INSTANCE_REFERENCE(radioGroup);
				GUI_INSTANCE_REFERENCE(tabControls);
				GUI_INSTANCE_REFERENCE(tabPageBasic);
				GUI_INSTANCE_REFERENCE(tabPageList);
				GUI_INSTANCE_REFERENCE(tabPageText);
				GUI_INSTANCE_REFERENCE(tabPageToolstrip);
				GUI_INSTANCE_REFERENCE(tracker);
			}
			else
			{
			}
		}
	public:
		MainWindow_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::controls::GuiWindow>(L"demos::MainWindow")
			,vl::presentation::controls::GuiWindow([](){
vl::collections::List<vl::reflection::description::ITypeDescriptor*> types;
types.Add(vl::reflection::description::GetTypeDescriptor<darkskin::WindowTemplate>());
auto factory = vl::presentation::templates::GuiTemplate::IFactory::CreateTemplateFactory(types);
auto style = new vl::presentation::templates::GuiWindowTemplate_StyleProvider(factory);
return style;
}())
			,buttonAddTab(0)
			,buttonEnable(0)
			,comboBoxSeasons(0)
			,commandEditCopy(0)
			,commandEditCut(0)
			,commandEditDelete(0)
			,commandEditPaste(0)
			,commandEditRedo(0)
			,commandEditSelect(0)
			,commandEditUndo(0)
			,commandFileExit(0)
			,commandFileNew(0)
			,commandFileNewRtf(0)
			,commandFileNewText(0)
			,commandFileOpen(0)
			,commandFileOpenRtf(0)
			,commandFileOpenText(0)
			,commandFilePrint(0)
			,commandFileSave(0)
			,commandFileSaveAs(0)
			,menuDropDown(0)
			,radioGroup(0)
			,tabControls(0)
			,tabPageBasic(0)
			,tabPageList(0)
			,tabPageText(0)
			,tabPageToolstrip(0)
			,tracker(0)
		{
		}
	};

}
namespace vl
{
	namespace reflection
	{
		namespace description
		{
			DECL_TYPE_INFO(darkskin::BottomScrollButtonTemplate)
			DECL_TYPE_INFO(darkskin::ButtonTemplate)
			DECL_TYPE_INFO(darkskin::CheckBoxTemplate)
			DECL_TYPE_INFO(darkskin::CheckItemBackgroundTemplate)
			DECL_TYPE_INFO(darkskin::CheckTextListTemplate)
			DECL_TYPE_INFO(darkskin::ComboBoxTemplate)
			DECL_TYPE_INFO(darkskin::DatePickerTemplate)
			DECL_TYPE_INFO(darkskin::DocumentLabelTemplate)
			DECL_TYPE_INFO(darkskin::DocumentViewerTemplate)
			DECL_TYPE_INFO(darkskin::ExpandingDecoratorTemplate)
			DECL_TYPE_INFO(darkskin::GroupBoxTemplate)
			DECL_TYPE_INFO(darkskin::HScrollHandleTemplate)
			DECL_TYPE_INFO(darkskin::HScrollTemplate)
			DECL_TYPE_INFO(darkskin::HTrackerTemplate)
			DECL_TYPE_INFO(darkskin::ItemBackgroundTemplate)
			DECL_TYPE_INFO(darkskin::LabelTemplate)
			DECL_TYPE_INFO(darkskin::LeftScrollButtonTemplate)
			DECL_TYPE_INFO(darkskin::ListViewColumnHeaderTemplate)
			DECL_TYPE_INFO(darkskin::ListViewTemplate)
			DECL_TYPE_INFO(darkskin::MenuBarButtonTemplate)
			DECL_TYPE_INFO(darkskin::MenuItemButtonTemplate)
			DECL_TYPE_INFO(darkskin::MenuSplitterTemplate)
			DECL_TYPE_INFO(darkskin::MultilineTextBoxTemplate)
			DECL_TYPE_INFO(darkskin::ProgressBarTemplate)
			DECL_TYPE_INFO(darkskin::RadioButtonTemplate)
			DECL_TYPE_INFO(darkskin::RadioTextListTemplate)
			DECL_TYPE_INFO(darkskin::RightScrollButtonTemplate)
			DECL_TYPE_INFO(darkskin::ScrollViewTemplate)
			DECL_TYPE_INFO(darkskin::SinglelineTextBoxTemplate)
			DECL_TYPE_INFO(darkskin::TabDropdownTemplate)
			DECL_TYPE_INFO(darkskin::TabHeaderTemplate)
			DECL_TYPE_INFO(darkskin::TabTemplate)
			DECL_TYPE_INFO(darkskin::TextListTemplate)
			DECL_TYPE_INFO(darkskin::ToolstripButtonTemplate)
			DECL_TYPE_INFO(darkskin::ToolstripDropdownButtonTemplate)
			DECL_TYPE_INFO(darkskin::ToolstripMenuTemplate)
			DECL_TYPE_INFO(darkskin::ToolstripSplitArrowTemplate)
			DECL_TYPE_INFO(darkskin::ToolstripSplitButtonTemplate)
			DECL_TYPE_INFO(darkskin::ToolstripSplitterTemplate)
			DECL_TYPE_INFO(darkskin::ToolstripTemplate)
			DECL_TYPE_INFO(darkskin::TooltipTemplate)
			DECL_TYPE_INFO(darkskin::TopScrollButtonTemplate)
			DECL_TYPE_INFO(darkskin::TreeViewTemplate)
			DECL_TYPE_INFO(darkskin::VScrollHandleTemplate)
			DECL_TYPE_INFO(darkskin::VScrollTemplate)
			DECL_TYPE_INFO(darkskin::VTrackerTemplate)
			DECL_TYPE_INFO(darkskin::WindowTemplate)
			DECL_TYPE_INFO(demos::MainWindow)

		}
	}
}
namespace darkskin
{
	class BottomScrollButtonTemplate : public darkskin::BottomScrollButtonTemplate_<darkskin::BottomScrollButtonTemplate>
	{
		friend class darkskin::BottomScrollButtonTemplate_<darkskin::BottomScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::BottomScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		BottomScrollButtonTemplate();
	};
}


namespace darkskin
{
	class ButtonTemplate : public darkskin::ButtonTemplate_<darkskin::ButtonTemplate>
	{
		friend class darkskin::ButtonTemplate_<darkskin::ButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ButtonTemplate();
	};
}


namespace darkskin
{
	class CheckBoxTemplate : public darkskin::CheckBoxTemplate_<darkskin::CheckBoxTemplate>
	{
		friend class darkskin::CheckBoxTemplate_<darkskin::CheckBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::CheckBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		CheckBoxTemplate();
	};
}


namespace darkskin
{
	class CheckItemBackgroundTemplate : public darkskin::CheckItemBackgroundTemplate_<darkskin::CheckItemBackgroundTemplate>
	{
		friend class darkskin::CheckItemBackgroundTemplate_<darkskin::CheckItemBackgroundTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::CheckItemBackgroundTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		CheckItemBackgroundTemplate();
	};
}


namespace darkskin
{
	class CheckTextListTemplate : public darkskin::CheckTextListTemplate_<darkskin::CheckTextListTemplate>
	{
		friend class darkskin::CheckTextListTemplate_<darkskin::CheckTextListTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::CheckTextListTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		CheckTextListTemplate();
	};
}


namespace darkskin
{
	class ComboBoxTemplate : public darkskin::ComboBoxTemplate_<darkskin::ComboBoxTemplate>
	{
		friend class darkskin::ComboBoxTemplate_<darkskin::ComboBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ComboBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ComboBoxTemplate();
	};
}


namespace darkskin
{
	class DatePickerTemplate : public darkskin::DatePickerTemplate_<darkskin::DatePickerTemplate>
	{
		friend class darkskin::DatePickerTemplate_<darkskin::DatePickerTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::DatePickerTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		DatePickerTemplate();
	};
}


namespace darkskin
{
	class DocumentLabelTemplate : public darkskin::DocumentLabelTemplate_<darkskin::DocumentLabelTemplate>
	{
		friend class darkskin::DocumentLabelTemplate_<darkskin::DocumentLabelTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::DocumentLabelTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		DocumentLabelTemplate();
	};
}


namespace darkskin
{
	class DocumentViewerTemplate : public darkskin::DocumentViewerTemplate_<darkskin::DocumentViewerTemplate>
	{
		friend class darkskin::DocumentViewerTemplate_<darkskin::DocumentViewerTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::DocumentViewerTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		DocumentViewerTemplate();
	};
}


namespace darkskin
{
	class ExpandingDecoratorTemplate : public darkskin::ExpandingDecoratorTemplate_<darkskin::ExpandingDecoratorTemplate>
	{
		friend class darkskin::ExpandingDecoratorTemplate_<darkskin::ExpandingDecoratorTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ExpandingDecoratorTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ExpandingDecoratorTemplate();
	};
}


namespace darkskin
{
	class GroupBoxTemplate : public darkskin::GroupBoxTemplate_<darkskin::GroupBoxTemplate>
	{
		friend class darkskin::GroupBoxTemplate_<darkskin::GroupBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::GroupBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		GroupBoxTemplate();
	};
}


namespace darkskin
{
	class HScrollHandleTemplate : public darkskin::HScrollHandleTemplate_<darkskin::HScrollHandleTemplate>
	{
		friend class darkskin::HScrollHandleTemplate_<darkskin::HScrollHandleTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::HScrollHandleTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		HScrollHandleTemplate();
	};
}


namespace darkskin
{
	class ItemBackgroundTemplate : public darkskin::ItemBackgroundTemplate_<darkskin::ItemBackgroundTemplate>
	{
		friend class darkskin::ItemBackgroundTemplate_<darkskin::ItemBackgroundTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ItemBackgroundTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ItemBackgroundTemplate();
	};
}


namespace darkskin
{
	class LabelTemplate : public darkskin::LabelTemplate_<darkskin::LabelTemplate>
	{
		friend class darkskin::LabelTemplate_<darkskin::LabelTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::LabelTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		LabelTemplate();
	};
}


namespace darkskin
{
	class LeftScrollButtonTemplate : public darkskin::LeftScrollButtonTemplate_<darkskin::LeftScrollButtonTemplate>
	{
		friend class darkskin::LeftScrollButtonTemplate_<darkskin::LeftScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::LeftScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		LeftScrollButtonTemplate();
	};
}


namespace darkskin
{
	class ListViewColumnHeaderTemplate : public darkskin::ListViewColumnHeaderTemplate_<darkskin::ListViewColumnHeaderTemplate>
	{
		friend class darkskin::ListViewColumnHeaderTemplate_<darkskin::ListViewColumnHeaderTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ListViewColumnHeaderTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ListViewColumnHeaderTemplate();
	};
}


namespace darkskin
{
	class ListViewTemplate : public darkskin::ListViewTemplate_<darkskin::ListViewTemplate>
	{
		friend class darkskin::ListViewTemplate_<darkskin::ListViewTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ListViewTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ListViewTemplate();
	};
}


namespace darkskin
{
	class MenuBarButtonTemplate : public darkskin::MenuBarButtonTemplate_<darkskin::MenuBarButtonTemplate>
	{
		friend class darkskin::MenuBarButtonTemplate_<darkskin::MenuBarButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::MenuBarButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MenuBarButtonTemplate();
	};
}


namespace darkskin
{
	class MenuItemButtonTemplate : public darkskin::MenuItemButtonTemplate_<darkskin::MenuItemButtonTemplate>
	{
		friend class darkskin::MenuItemButtonTemplate_<darkskin::MenuItemButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::MenuItemButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MenuItemButtonTemplate();
	};
}


namespace darkskin
{
	class MenuSplitterTemplate : public darkskin::MenuSplitterTemplate_<darkskin::MenuSplitterTemplate>
	{
		friend class darkskin::MenuSplitterTemplate_<darkskin::MenuSplitterTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::MenuSplitterTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MenuSplitterTemplate();
	};
}


namespace darkskin
{
	class MultilineTextBoxTemplate : public darkskin::MultilineTextBoxTemplate_<darkskin::MultilineTextBoxTemplate>
	{
		friend class darkskin::MultilineTextBoxTemplate_<darkskin::MultilineTextBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::MultilineTextBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MultilineTextBoxTemplate();
	};
}


namespace darkskin
{
	class ProgressBarTemplate : public darkskin::ProgressBarTemplate_<darkskin::ProgressBarTemplate>
	{
		friend class darkskin::ProgressBarTemplate_<darkskin::ProgressBarTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ProgressBarTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ProgressBarTemplate();
	};
}


namespace darkskin
{
	class RadioButtonTemplate : public darkskin::RadioButtonTemplate_<darkskin::RadioButtonTemplate>
	{
		friend class darkskin::RadioButtonTemplate_<darkskin::RadioButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::RadioButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		RadioButtonTemplate();
	};
}


namespace darkskin
{
	class RadioTextListTemplate : public darkskin::RadioTextListTemplate_<darkskin::RadioTextListTemplate>
	{
		friend class darkskin::RadioTextListTemplate_<darkskin::RadioTextListTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::RadioTextListTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		RadioTextListTemplate();
	};
}


namespace darkskin
{
	class RightScrollButtonTemplate : public darkskin::RightScrollButtonTemplate_<darkskin::RightScrollButtonTemplate>
	{
		friend class darkskin::RightScrollButtonTemplate_<darkskin::RightScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::RightScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		RightScrollButtonTemplate();
	};
}


namespace darkskin
{
	class ScrollViewTemplate : public darkskin::ScrollViewTemplate_<darkskin::ScrollViewTemplate>
	{
		friend class darkskin::ScrollViewTemplate_<darkskin::ScrollViewTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ScrollViewTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ScrollViewTemplate();
	};
}


namespace darkskin
{
	class SinglelineTextBoxTemplate : public darkskin::SinglelineTextBoxTemplate_<darkskin::SinglelineTextBoxTemplate>
	{
		friend class darkskin::SinglelineTextBoxTemplate_<darkskin::SinglelineTextBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::SinglelineTextBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		SinglelineTextBoxTemplate();
	};
}


namespace darkskin
{
	class TabDropdownTemplate : public darkskin::TabDropdownTemplate_<darkskin::TabDropdownTemplate>
	{
		friend class darkskin::TabDropdownTemplate_<darkskin::TabDropdownTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::TabDropdownTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TabDropdownTemplate();
	};
}


namespace darkskin
{
	class TabHeaderTemplate : public darkskin::TabHeaderTemplate_<darkskin::TabHeaderTemplate>
	{
		friend class darkskin::TabHeaderTemplate_<darkskin::TabHeaderTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::TabHeaderTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TabHeaderTemplate();
	};
}


namespace darkskin
{
	class TabTemplate : public darkskin::TabTemplate_<darkskin::TabTemplate>
	{
		friend class darkskin::TabTemplate_<darkskin::TabTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::TabTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TabTemplate();
	};
}


namespace darkskin
{
	class TextListTemplate : public darkskin::TextListTemplate_<darkskin::TextListTemplate>
	{
		friend class darkskin::TextListTemplate_<darkskin::TextListTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::TextListTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TextListTemplate();
	};
}


namespace darkskin
{
	class ToolstripButtonTemplate : public darkskin::ToolstripButtonTemplate_<darkskin::ToolstripButtonTemplate>
	{
		friend class darkskin::ToolstripButtonTemplate_<darkskin::ToolstripButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ToolstripButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripButtonTemplate();
	};
}


namespace darkskin
{
	class ToolstripDropdownButtonTemplate : public darkskin::ToolstripDropdownButtonTemplate_<darkskin::ToolstripDropdownButtonTemplate>
	{
		friend class darkskin::ToolstripDropdownButtonTemplate_<darkskin::ToolstripDropdownButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ToolstripDropdownButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripDropdownButtonTemplate();
	};
}


namespace darkskin
{
	class ToolstripMenuTemplate : public darkskin::ToolstripMenuTemplate_<darkskin::ToolstripMenuTemplate>
	{
		friend class darkskin::ToolstripMenuTemplate_<darkskin::ToolstripMenuTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ToolstripMenuTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripMenuTemplate();
	};
}


namespace darkskin
{
	class ToolstripSplitArrowTemplate : public darkskin::ToolstripSplitArrowTemplate_<darkskin::ToolstripSplitArrowTemplate>
	{
		friend class darkskin::ToolstripSplitArrowTemplate_<darkskin::ToolstripSplitArrowTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ToolstripSplitArrowTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripSplitArrowTemplate();
	};
}


namespace darkskin
{
	class ToolstripSplitButtonTemplate : public darkskin::ToolstripSplitButtonTemplate_<darkskin::ToolstripSplitButtonTemplate>
	{
		friend class darkskin::ToolstripSplitButtonTemplate_<darkskin::ToolstripSplitButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ToolstripSplitButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripSplitButtonTemplate();
	};
}


namespace darkskin
{
	class ToolstripSplitterTemplate : public darkskin::ToolstripSplitterTemplate_<darkskin::ToolstripSplitterTemplate>
	{
		friend class darkskin::ToolstripSplitterTemplate_<darkskin::ToolstripSplitterTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ToolstripSplitterTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripSplitterTemplate();
	};
}


namespace darkskin
{
	class ToolstripTemplate : public darkskin::ToolstripTemplate_<darkskin::ToolstripTemplate>
	{
		friend class darkskin::ToolstripTemplate_<darkskin::ToolstripTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::ToolstripTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripTemplate();
	};
}


namespace darkskin
{
	class TooltipTemplate : public darkskin::TooltipTemplate_<darkskin::TooltipTemplate>
	{
		friend class darkskin::TooltipTemplate_<darkskin::TooltipTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::TooltipTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TooltipTemplate();
	};
}


namespace darkskin
{
	class TopScrollButtonTemplate : public darkskin::TopScrollButtonTemplate_<darkskin::TopScrollButtonTemplate>
	{
		friend class darkskin::TopScrollButtonTemplate_<darkskin::TopScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::TopScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TopScrollButtonTemplate();
	};
}


namespace darkskin
{
	class TreeViewTemplate : public darkskin::TreeViewTemplate_<darkskin::TreeViewTemplate>
	{
		friend class darkskin::TreeViewTemplate_<darkskin::TreeViewTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::TreeViewTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TreeViewTemplate();
	};
}


namespace darkskin
{
	class VScrollHandleTemplate : public darkskin::VScrollHandleTemplate_<darkskin::VScrollHandleTemplate>
	{
		friend class darkskin::VScrollHandleTemplate_<darkskin::VScrollHandleTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::VScrollHandleTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		VScrollHandleTemplate();
	};
}


namespace darkskin
{
	class WindowTemplate : public darkskin::WindowTemplate_<darkskin::WindowTemplate>
	{
		friend class darkskin::WindowTemplate_<darkskin::WindowTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<darkskin::WindowTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		WindowTemplate();
	};
}



#endif
