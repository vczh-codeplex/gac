/***********************************************************************
Vczh Library++ 3.0
Developer: Zihan Chen(vczh)
GacUI::Partial Classes

This file is generated by: Vczh GacUI Resource Code Generator
************************************************************************
DO NOT MODIFY
***********************************************************************/

#ifndef VCZH_GACUI_RESOURCE_CODE_GENERATOR_HelloWorld_PARTIAL_CLASSES
#define VCZH_GACUI_RESOURCE_CODE_GENERATOR_HelloWorld_PARTIAL_CLASSES

#include "..\..\..\Public\Source\GacUIReflection.h"

namespace demos
{
	template<typename TImpl>
	class BottomScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		BottomScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::BottomScrollButtonTemplate")
			,self(0)
		{
		}
	};

	class BottomScrollButtonTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::ButtonTemplate")
			,self(0)
		{
		}
	};

	class ButtonTemplate;
}

namespace demos
{
	template<typename TImpl>
	class CheckBoxTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		CheckBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::CheckBoxTemplate")
			,self(0)
		{
		}
	};

	class CheckBoxTemplate;
}

namespace demos
{
	template<typename TImpl>
	class CheckItemBackgroundTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		CheckItemBackgroundTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::CheckItemBackgroundTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class CheckItemBackgroundTemplate;
}

namespace demos
{
	template<typename TImpl>
	class CheckTextListTemplate_ : public vl::presentation::templates::GuiTextListTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTextListTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		CheckTextListTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>(L"demos::CheckTextListTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class CheckTextListTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ComboBoxTemplate_ : public vl::presentation::templates::GuiDateComboBoxTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDateComboBoxTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiDateComboBoxTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ComboBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDateComboBoxTemplate>(L"demos::ComboBoxTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class ComboBoxTemplate;
}

namespace demos
{
	template<typename TImpl>
	class DatePickerTemplate_ : public vl::presentation::templates::GuiDatePickerTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDatePickerTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiDatePickerTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		DatePickerTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDatePickerTemplate>(L"demos::DatePickerTemplate")
			,self(0)
		{
		}
	};

	class DatePickerTemplate;
}

namespace demos
{
	template<typename TImpl>
	class DocumentLabelTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiControlTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		DocumentLabelTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"demos::DocumentLabelTemplate")
			,self(0)
		{
		}
	};

	class DocumentLabelTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ExpandingDecoratorTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ExpandingDecoratorTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::ExpandingDecoratorTemplate")
			,self(0)
		{
		}
	};

	class ExpandingDecoratorTemplate;
}

namespace demos
{
	template<typename TImpl>
	class GroupBoxTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiControlTemplate* self;
		vl::presentation::compositions::GuiBoundsComposition* titleBounds;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
				GUI_INSTANCE_REFERENCE(titleBounds);
			}
			else
			{
			}
		}
	public:
		GroupBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"demos::GroupBoxTemplate")
			,container(0)
			,self(0)
			,titleBounds(0)
		{
		}
	};

	class GroupBoxTemplate;
}

namespace demos
{
	template<typename TImpl>
	class HScrollHandleTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		HScrollHandleTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::HScrollHandleTemplate")
			,self(0)
		{
		}
	};

	class HScrollHandleTemplate;
}

namespace demos
{
	template<typename TImpl>
	class HScrollTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiPartialViewComposition* handle;
		vl::presentation::compositions::GuiBoundsComposition* handleContainer;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(handleContainer);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		HScrollTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"demos::HScrollTemplate")
			,handle(0)
			,handleContainer(0)
			,self(0)
		{
		}
	};

	class HScrollTemplate;
}

namespace demos
{
	template<typename TImpl>
	class HTrackerTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* handle;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		HTrackerTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"demos::HTrackerTemplate")
			,handle(0)
			,self(0)
		{
		}
	};

	class HTrackerTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ItemBackgroundTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ItemBackgroundTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::ItemBackgroundTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class ItemBackgroundTemplate;
}

namespace demos
{
	template<typename TImpl>
	class LabelTemplate_ : public vl::presentation::templates::GuiLabelTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiLabelTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiLabelTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		LabelTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiLabelTemplate>(L"demos::LabelTemplate")
			,self(0)
		{
		}
	};

	class LabelTemplate;
}

namespace demos
{
	template<typename TImpl>
	class LeftScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		LeftScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::LeftScrollButtonTemplate")
			,self(0)
		{
		}
	};

	class LeftScrollButtonTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ListViewColumnHeaderTemplate_ : public vl::presentation::templates::GuiListViewColumnHeaderTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewColumnHeaderTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::controls::GuiSelectableButton* buttonArrow;
		vl::presentation::templates::GuiListViewColumnHeaderTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(buttonArrow);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ListViewColumnHeaderTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewColumnHeaderTemplate>(L"demos::ListViewColumnHeaderTemplate")
			,buttonArrow(0)
			,self(0)
		{
		}
	};

	class ListViewColumnHeaderTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ListViewTemplate_ : public vl::presentation::templates::GuiListViewTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiListViewTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ListViewTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewTemplate>(L"demos::ListViewTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class ListViewTemplate;
}

namespace demos
{
	template<typename TImpl>
	class MainWindow_ : public vl::presentation::controls::GuiWindow, public vl::presentation::GuiInstancePartialClass<vl::presentation::controls::GuiWindow>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::controls::GuiButton* buttonAddTab;
		vl::presentation::controls::GuiButton* buttonEnable;
		vl::presentation::controls::GuiComboBoxListControl* comboBoxSeasons;
		vl::presentation::controls::GuiToolstripCommand* commandEditCopy;
		vl::presentation::controls::GuiToolstripCommand* commandEditCut;
		vl::presentation::controls::GuiToolstripCommand* commandEditDelete;
		vl::presentation::controls::GuiToolstripCommand* commandEditPaste;
		vl::presentation::controls::GuiToolstripCommand* commandEditRedo;
		vl::presentation::controls::GuiToolstripCommand* commandEditSelect;
		vl::presentation::controls::GuiToolstripCommand* commandEditUndo;
		vl::presentation::controls::GuiToolstripCommand* commandFileExit;
		vl::presentation::controls::GuiToolstripCommand* commandFileNew;
		vl::presentation::controls::GuiToolstripCommand* commandFileNewRtf;
		vl::presentation::controls::GuiToolstripCommand* commandFileNewText;
		vl::presentation::controls::GuiToolstripCommand* commandFileOpen;
		vl::presentation::controls::GuiToolstripCommand* commandFileOpenRtf;
		vl::presentation::controls::GuiToolstripCommand* commandFileOpenText;
		vl::presentation::controls::GuiToolstripCommand* commandFilePrint;
		vl::presentation::controls::GuiToolstripCommand* commandFileSave;
		vl::presentation::controls::GuiToolstripCommand* commandFileSaveAs;
		vl::presentation::controls::GuiToolstripMenu* menuDropDown;
		vl::presentation::controls::GuiSelectableButton::MutexGroupController* radioGroup;
		vl::presentation::controls::GuiTab* tabControls;
		vl::presentation::controls::GuiTabPage* tabPageBasic;
		vl::presentation::controls::GuiTabPage* tabPageList;
		vl::presentation::controls::GuiTabPage* tabPageText;
		vl::presentation::controls::GuiTabPage* tabPageToolstrip;
		vl::presentation::controls::GuiScroll* tracker;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(buttonAddTab);
				GUI_INSTANCE_REFERENCE(buttonEnable);
				GUI_INSTANCE_REFERENCE(comboBoxSeasons);
				GUI_INSTANCE_REFERENCE(commandEditCopy);
				GUI_INSTANCE_REFERENCE(commandEditCut);
				GUI_INSTANCE_REFERENCE(commandEditDelete);
				GUI_INSTANCE_REFERENCE(commandEditPaste);
				GUI_INSTANCE_REFERENCE(commandEditRedo);
				GUI_INSTANCE_REFERENCE(commandEditSelect);
				GUI_INSTANCE_REFERENCE(commandEditUndo);
				GUI_INSTANCE_REFERENCE(commandFileExit);
				GUI_INSTANCE_REFERENCE(commandFileNew);
				GUI_INSTANCE_REFERENCE(commandFileNewRtf);
				GUI_INSTANCE_REFERENCE(commandFileNewText);
				GUI_INSTANCE_REFERENCE(commandFileOpen);
				GUI_INSTANCE_REFERENCE(commandFileOpenRtf);
				GUI_INSTANCE_REFERENCE(commandFileOpenText);
				GUI_INSTANCE_REFERENCE(commandFilePrint);
				GUI_INSTANCE_REFERENCE(commandFileSave);
				GUI_INSTANCE_REFERENCE(commandFileSaveAs);
				GUI_INSTANCE_REFERENCE(menuDropDown);
				GUI_INSTANCE_REFERENCE(radioGroup);
				GUI_INSTANCE_REFERENCE(tabControls);
				GUI_INSTANCE_REFERENCE(tabPageBasic);
				GUI_INSTANCE_REFERENCE(tabPageList);
				GUI_INSTANCE_REFERENCE(tabPageText);
				GUI_INSTANCE_REFERENCE(tabPageToolstrip);
				GUI_INSTANCE_REFERENCE(tracker);
			}
			else
			{
			}
		}
	public:
		MainWindow_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::controls::GuiWindow>(L"demos::MainWindow")
			,vl::presentation::controls::GuiWindow([](){
vl::collections::List<vl::reflection::description::ITypeDescriptor*> types;
types.Add(vl::reflection::description::GetTypeDescriptor<demos::WindowTemplate>());
auto factory = vl::presentation::templates::GuiTemplate::IFactory::CreateTemplateFactory(types);
auto style = new vl::presentation::templates::GuiWindowTemplate_StyleProvider(factory);
return style;
}())
			,buttonAddTab(0)
			,buttonEnable(0)
			,comboBoxSeasons(0)
			,commandEditCopy(0)
			,commandEditCut(0)
			,commandEditDelete(0)
			,commandEditPaste(0)
			,commandEditRedo(0)
			,commandEditSelect(0)
			,commandEditUndo(0)
			,commandFileExit(0)
			,commandFileNew(0)
			,commandFileNewRtf(0)
			,commandFileNewText(0)
			,commandFileOpen(0)
			,commandFileOpenRtf(0)
			,commandFileOpenText(0)
			,commandFilePrint(0)
			,commandFileSave(0)
			,commandFileSaveAs(0)
			,menuDropDown(0)
			,radioGroup(0)
			,tabControls(0)
			,tabPageBasic(0)
			,tabPageList(0)
			,tabPageText(0)
			,tabPageToolstrip(0)
			,tracker(0)
		{
		}
	};

	class MainWindow;
}

namespace demos
{
	template<typename TImpl>
	class MenuBarButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		MenuBarButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"demos::MenuBarButtonTemplate")
			,self(0)
		{
		}
	};

	class MenuBarButtonTemplate;
}

namespace demos
{
	template<typename TImpl>
	class MenuItemButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		MenuItemButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"demos::MenuItemButtonTemplate")
			,self(0)
		{
		}
	};

	class MenuItemButtonTemplate;
}

namespace demos
{
	template<typename TImpl>
	class MenuSplitterTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
			}
			else
			{
			}
		}
	public:
		MenuSplitterTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"demos::MenuSplitterTemplate")
		{
		}
	};

	class MenuSplitterTemplate;
}

namespace demos
{
	template<typename TImpl>
	class MultilineTextBoxTemplate_ : public vl::presentation::templates::GuiMultilineTextBoxTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMultilineTextBoxTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiMultilineTextBoxTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		MultilineTextBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMultilineTextBoxTemplate>(L"demos::MultilineTextBoxTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class MultilineTextBoxTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ProgressBarTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ProgressBarTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"demos::ProgressBarTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class ProgressBarTemplate;
}

namespace demos
{
	template<typename TImpl>
	class RadioButtonTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		RadioButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::RadioButtonTemplate")
			,self(0)
		{
		}
	};

	class RadioButtonTemplate;
}

namespace demos
{
	template<typename TImpl>
	class RadioTextListTemplate_ : public vl::presentation::templates::GuiTextListTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTextListTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		RadioTextListTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>(L"demos::RadioTextListTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class RadioTextListTemplate;
}

namespace demos
{
	template<typename TImpl>
	class RightScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		RightScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::RightScrollButtonTemplate")
			,self(0)
		{
		}
	};

	class RightScrollButtonTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ScrollViewTemplate_ : public vl::presentation::templates::GuiScrollViewTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollViewTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiScrollViewTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ScrollViewTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollViewTemplate>(L"demos::ScrollViewTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class ScrollViewTemplate;
}

namespace demos
{
	template<typename TImpl>
	class SinglelineTextBoxTemplate_ : public vl::presentation::templates::GuiSinglelineTextBoxTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSinglelineTextBoxTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiSinglelineTextBoxTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		SinglelineTextBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSinglelineTextBoxTemplate>(L"demos::SinglelineTextBoxTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class SinglelineTextBoxTemplate;
}

namespace demos
{
	template<typename TImpl>
	class TabDropdownTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TabDropdownTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::TabDropdownTemplate")
			,self(0)
		{
		}
	};

	class TabDropdownTemplate;
}

namespace demos
{
	template<typename TImpl>
	class TabHeaderTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TabHeaderTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::TabHeaderTemplate")
			,self(0)
		{
		}
	};

	class TabHeaderTemplate;
}

namespace demos
{
	template<typename TImpl>
	class TabTemplate_ : public vl::presentation::templates::GuiTabTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTabTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::compositions::GuiBoundsComposition* header;
		vl::presentation::templates::GuiTabTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(header);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TabTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTabTemplate>(L"demos::TabTemplate")
			,container(0)
			,header(0)
			,self(0)
		{
		}
	};

	class TabTemplate;
}

namespace demos
{
	template<typename TImpl>
	class TextListTemplate_ : public vl::presentation::templates::GuiTextListTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTextListTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TextListTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>(L"demos::TextListTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class TextListTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ToolstripButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"demos::ToolstripButtonTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class ToolstripButtonTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ToolstripDropdownButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripDropdownButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"demos::ToolstripDropdownButtonTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class ToolstripDropdownButtonTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ToolstripMenuTemplate_ : public vl::presentation::templates::GuiMenuTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMenuTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
			}
			else
			{
			}
		}
	public:
		ToolstripMenuTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMenuTemplate>(L"demos::ToolstripMenuTemplate")
			,container(0)
		{
		}
	};

	class ToolstripMenuTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ToolstripSplitArrowTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripSplitArrowTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::ToolstripSplitArrowTemplate")
			,self(0)
		{
		}
	};

	class ToolstripSplitArrowTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ToolstripSplitButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::controls::GuiSelectableButton* buttonArrow;
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(buttonArrow);
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripSplitButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"demos::ToolstripSplitButtonTemplate")
			,buttonArrow(0)
			,container(0)
			,self(0)
		{
		}
	};

	class ToolstripSplitButtonTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ToolstripSplitterTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
			}
			else
			{
			}
		}
	public:
		ToolstripSplitterTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"demos::ToolstripSplitterTemplate")
		{
		}
	};

	class ToolstripSplitterTemplate;
}

namespace demos
{
	template<typename TImpl>
	class ToolstripTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
			}
			else
			{
			}
		}
	public:
		ToolstripTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"demos::ToolstripTemplate")
		{
		}
	};

	class ToolstripTemplate;
}

namespace demos
{
	template<typename TImpl>
	class TooltipTemplate_ : public vl::presentation::templates::GuiWindowTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiWindowTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
			}
			else
			{
			}
		}
	public:
		TooltipTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiWindowTemplate>(L"demos::TooltipTemplate")
			,container(0)
		{
		}
	};

	class TooltipTemplate;
}

namespace demos
{
	template<typename TImpl>
	class TopScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TopScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::TopScrollButtonTemplate")
			,self(0)
		{
		}
	};

	class TopScrollButtonTemplate;
}

namespace demos
{
	template<typename TImpl>
	class TreeViewTemplate_ : public vl::presentation::templates::GuiTreeViewTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTreeViewTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTreeViewTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TreeViewTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTreeViewTemplate>(L"demos::TreeViewTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class TreeViewTemplate;
}

namespace demos
{
	template<typename TImpl>
	class VScrollHandleTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		VScrollHandleTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::VScrollHandleTemplate")
			,self(0)
		{
		}
	};

	class VScrollHandleTemplate;
}

namespace demos
{
	template<typename TImpl>
	class VScrollTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiPartialViewComposition* handle;
		vl::presentation::compositions::GuiBoundsComposition* handleContainer;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(handleContainer);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		VScrollTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"demos::VScrollTemplate")
			,handle(0)
			,handleContainer(0)
			,self(0)
		{
		}
	};

	class VScrollTemplate;
}

namespace demos
{
	template<typename TImpl>
	class VTrackerTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* handle;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		VTrackerTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"demos::VTrackerTemplate")
			,handle(0)
			,self(0)
		{
		}
	};

	class VTrackerTemplate;
}

namespace demos
{
	template<typename TImpl>
	class WindowTemplate_ : public vl::presentation::templates::GuiWindowTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiWindowTemplate>, public vl::reflection::Description<TImpl>
	{
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiWindowTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		WindowTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiWindowTemplate>(L"demos::WindowTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	class WindowTemplate;
}

namespace vl
{
	namespace reflection
	{
		namespace description
		{
			DECL_TYPE_INFO(demos::BottomScrollButtonTemplate)
			DECL_TYPE_INFO(demos::ButtonTemplate)
			DECL_TYPE_INFO(demos::CheckBoxTemplate)
			DECL_TYPE_INFO(demos::CheckItemBackgroundTemplate)
			DECL_TYPE_INFO(demos::CheckTextListTemplate)
			DECL_TYPE_INFO(demos::ComboBoxTemplate)
			DECL_TYPE_INFO(demos::DatePickerTemplate)
			DECL_TYPE_INFO(demos::DocumentLabelTemplate)
			DECL_TYPE_INFO(demos::ExpandingDecoratorTemplate)
			DECL_TYPE_INFO(demos::GroupBoxTemplate)
			DECL_TYPE_INFO(demos::HScrollHandleTemplate)
			DECL_TYPE_INFO(demos::HScrollTemplate)
			DECL_TYPE_INFO(demos::HTrackerTemplate)
			DECL_TYPE_INFO(demos::ItemBackgroundTemplate)
			DECL_TYPE_INFO(demos::LabelTemplate)
			DECL_TYPE_INFO(demos::LeftScrollButtonTemplate)
			DECL_TYPE_INFO(demos::ListViewColumnHeaderTemplate)
			DECL_TYPE_INFO(demos::ListViewTemplate)
			DECL_TYPE_INFO(demos::MainWindow)
			DECL_TYPE_INFO(demos::MenuBarButtonTemplate)
			DECL_TYPE_INFO(demos::MenuItemButtonTemplate)
			DECL_TYPE_INFO(demos::MenuSplitterTemplate)
			DECL_TYPE_INFO(demos::MultilineTextBoxTemplate)
			DECL_TYPE_INFO(demos::ProgressBarTemplate)
			DECL_TYPE_INFO(demos::RadioButtonTemplate)
			DECL_TYPE_INFO(demos::RadioTextListTemplate)
			DECL_TYPE_INFO(demos::RightScrollButtonTemplate)
			DECL_TYPE_INFO(demos::ScrollViewTemplate)
			DECL_TYPE_INFO(demos::SinglelineTextBoxTemplate)
			DECL_TYPE_INFO(demos::TabDropdownTemplate)
			DECL_TYPE_INFO(demos::TabHeaderTemplate)
			DECL_TYPE_INFO(demos::TabTemplate)
			DECL_TYPE_INFO(demos::TextListTemplate)
			DECL_TYPE_INFO(demos::ToolstripButtonTemplate)
			DECL_TYPE_INFO(demos::ToolstripDropdownButtonTemplate)
			DECL_TYPE_INFO(demos::ToolstripMenuTemplate)
			DECL_TYPE_INFO(demos::ToolstripSplitArrowTemplate)
			DECL_TYPE_INFO(demos::ToolstripSplitButtonTemplate)
			DECL_TYPE_INFO(demos::ToolstripSplitterTemplate)
			DECL_TYPE_INFO(demos::ToolstripTemplate)
			DECL_TYPE_INFO(demos::TooltipTemplate)
			DECL_TYPE_INFO(demos::TopScrollButtonTemplate)
			DECL_TYPE_INFO(demos::TreeViewTemplate)
			DECL_TYPE_INFO(demos::VScrollHandleTemplate)
			DECL_TYPE_INFO(demos::VScrollTemplate)
			DECL_TYPE_INFO(demos::VTrackerTemplate)
			DECL_TYPE_INFO(demos::WindowTemplate)
		}
	}
}

/*
BottomScrollButtonTemplate.h :
namespace demos
{
	class BottomScrollButtonTemplate : public demos::BottomScrollButtonTemplate_<demos::BottomScrollButtonTemplate>
	{
		friend class demos::BottomScrollButtonTemplate_<demos::BottomScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::BottomScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		BottomScrollButtonTemplate();
	};
}


BottomScrollButtonTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	BottomScrollButtonTemplate::BottomScrollButtonTemplate()
	{
		InitializeComponents();
	}
}


ButtonTemplate.h :
namespace demos
{
	class ButtonTemplate : public demos::ButtonTemplate_<demos::ButtonTemplate>
	{
		friend class demos::ButtonTemplate_<demos::ButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ButtonTemplate();
	};
}


ButtonTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ButtonTemplate::ButtonTemplate()
	{
		InitializeComponents();
	}
}


CheckBoxTemplate.h :
namespace demos
{
	class CheckBoxTemplate : public demos::CheckBoxTemplate_<demos::CheckBoxTemplate>
	{
		friend class demos::CheckBoxTemplate_<demos::CheckBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::CheckBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		CheckBoxTemplate();
	};
}


CheckBoxTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	CheckBoxTemplate::CheckBoxTemplate()
	{
		InitializeComponents();
	}
}


CheckItemBackgroundTemplate.h :
namespace demos
{
	class CheckItemBackgroundTemplate : public demos::CheckItemBackgroundTemplate_<demos::CheckItemBackgroundTemplate>
	{
		friend class demos::CheckItemBackgroundTemplate_<demos::CheckItemBackgroundTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::CheckItemBackgroundTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		CheckItemBackgroundTemplate();
	};
}


CheckItemBackgroundTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	CheckItemBackgroundTemplate::CheckItemBackgroundTemplate()
	{
		InitializeComponents();
	}
}


CheckTextListTemplate.h :
namespace demos
{
	class CheckTextListTemplate : public demos::CheckTextListTemplate_<demos::CheckTextListTemplate>
	{
		friend class demos::CheckTextListTemplate_<demos::CheckTextListTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::CheckTextListTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		CheckTextListTemplate();
	};
}


CheckTextListTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	CheckTextListTemplate::CheckTextListTemplate()
	{
		InitializeComponents();
	}
}


ComboBoxTemplate.h :
namespace demos
{
	class ComboBoxTemplate : public demos::ComboBoxTemplate_<demos::ComboBoxTemplate>
	{
		friend class demos::ComboBoxTemplate_<demos::ComboBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ComboBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ComboBoxTemplate();
	};
}


ComboBoxTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ComboBoxTemplate::ComboBoxTemplate()
	{
		InitializeComponents();
	}
}


DatePickerTemplate.h :
namespace demos
{
	class DatePickerTemplate : public demos::DatePickerTemplate_<demos::DatePickerTemplate>
	{
		friend class demos::DatePickerTemplate_<demos::DatePickerTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::DatePickerTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		DatePickerTemplate();
	};
}


DatePickerTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	DatePickerTemplate::DatePickerTemplate()
	{
		InitializeComponents();
	}
}


DocumentLabelTemplate.h :
namespace demos
{
	class DocumentLabelTemplate : public demos::DocumentLabelTemplate_<demos::DocumentLabelTemplate>
	{
		friend class demos::DocumentLabelTemplate_<demos::DocumentLabelTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::DocumentLabelTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		DocumentLabelTemplate();
	};
}


DocumentLabelTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	DocumentLabelTemplate::DocumentLabelTemplate()
	{
		InitializeComponents();
	}
}


ExpandingDecoratorTemplate.h :
namespace demos
{
	class ExpandingDecoratorTemplate : public demos::ExpandingDecoratorTemplate_<demos::ExpandingDecoratorTemplate>
	{
		friend class demos::ExpandingDecoratorTemplate_<demos::ExpandingDecoratorTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ExpandingDecoratorTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ExpandingDecoratorTemplate();
	};
}


ExpandingDecoratorTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ExpandingDecoratorTemplate::ExpandingDecoratorTemplate()
	{
		InitializeComponents();
	}
}


GroupBoxTemplate.h :
namespace demos
{
	class GroupBoxTemplate : public demos::GroupBoxTemplate_<demos::GroupBoxTemplate>
	{
		friend class demos::GroupBoxTemplate_<demos::GroupBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::GroupBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		GroupBoxTemplate();
	};
}


GroupBoxTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	GroupBoxTemplate::GroupBoxTemplate()
	{
		InitializeComponents();
	}
}


HScrollHandleTemplate.h :
namespace demos
{
	class HScrollHandleTemplate : public demos::HScrollHandleTemplate_<demos::HScrollHandleTemplate>
	{
		friend class demos::HScrollHandleTemplate_<demos::HScrollHandleTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::HScrollHandleTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		HScrollHandleTemplate();
	};
}


HScrollHandleTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	HScrollHandleTemplate::HScrollHandleTemplate()
	{
		InitializeComponents();
	}
}


HScrollTemplate.h :
namespace demos
{
	class HScrollTemplate : public demos::HScrollTemplate_<demos::HScrollTemplate>
	{
		friend class demos::HScrollTemplate_<demos::HScrollTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::HScrollTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		void OnHandleMouseDown(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		void OnHandleMouseMove(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		void OnHandleMouseUp(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		HScrollTemplate();
	};
}


HScrollTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	void HScrollTemplate::OnHandleMouseDown(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	void HScrollTemplate::OnHandleMouseMove(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	void HScrollTemplate::OnHandleMouseUp(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	HScrollTemplate::HScrollTemplate()
	{
		InitializeComponents();
	}
}


HTrackerTemplate.h :
namespace demos
{
	class HTrackerTemplate : public demos::HTrackerTemplate_<demos::HTrackerTemplate>
	{
		friend class demos::HTrackerTemplate_<demos::HTrackerTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::HTrackerTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		void OnHandleMouseDown(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		void OnHandleMouseMove(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		void OnHandleMouseUp(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		HTrackerTemplate();
	};
}


HTrackerTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	void HTrackerTemplate::OnHandleMouseDown(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	void HTrackerTemplate::OnHandleMouseMove(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	void HTrackerTemplate::OnHandleMouseUp(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	HTrackerTemplate::HTrackerTemplate()
	{
		InitializeComponents();
	}
}


ItemBackgroundTemplate.h :
namespace demos
{
	class ItemBackgroundTemplate : public demos::ItemBackgroundTemplate_<demos::ItemBackgroundTemplate>
	{
		friend class demos::ItemBackgroundTemplate_<demos::ItemBackgroundTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ItemBackgroundTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ItemBackgroundTemplate();
	};
}


ItemBackgroundTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ItemBackgroundTemplate::ItemBackgroundTemplate()
	{
		InitializeComponents();
	}
}


LabelTemplate.h :
namespace demos
{
	class LabelTemplate : public demos::LabelTemplate_<demos::LabelTemplate>
	{
		friend class demos::LabelTemplate_<demos::LabelTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::LabelTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		LabelTemplate();
	};
}


LabelTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	LabelTemplate::LabelTemplate()
	{
		InitializeComponents();
	}
}


LeftScrollButtonTemplate.h :
namespace demos
{
	class LeftScrollButtonTemplate : public demos::LeftScrollButtonTemplate_<demos::LeftScrollButtonTemplate>
	{
		friend class demos::LeftScrollButtonTemplate_<demos::LeftScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::LeftScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		LeftScrollButtonTemplate();
	};
}


LeftScrollButtonTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	LeftScrollButtonTemplate::LeftScrollButtonTemplate()
	{
		InitializeComponents();
	}
}


ListViewColumnHeaderTemplate.h :
namespace demos
{
	class ListViewColumnHeaderTemplate : public demos::ListViewColumnHeaderTemplate_<demos::ListViewColumnHeaderTemplate>
	{
		friend class demos::ListViewColumnHeaderTemplate_<demos::ListViewColumnHeaderTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ListViewColumnHeaderTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ListViewColumnHeaderTemplate();
	};
}


ListViewColumnHeaderTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ListViewColumnHeaderTemplate::ListViewColumnHeaderTemplate()
	{
		InitializeComponents();
	}
}


ListViewTemplate.h :
namespace demos
{
	class ListViewTemplate : public demos::ListViewTemplate_<demos::ListViewTemplate>
	{
		friend class demos::ListViewTemplate_<demos::ListViewTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ListViewTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ListViewTemplate();
	};
}


ListViewTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ListViewTemplate::ListViewTemplate()
	{
		InitializeComponents();
	}
}


MainWindow.h :
namespace demos
{
	class MainWindow : public demos::MainWindow_<demos::MainWindow>
	{
		friend class demos::MainWindow_<demos::MainWindow>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::MainWindow>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MainWindow();
	};
}


MainWindow.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	MainWindow::MainWindow()
	{
		InitializeComponents();
	}
}


MenuBarButtonTemplate.h :
namespace demos
{
	class MenuBarButtonTemplate : public demos::MenuBarButtonTemplate_<demos::MenuBarButtonTemplate>
	{
		friend class demos::MenuBarButtonTemplate_<demos::MenuBarButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::MenuBarButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MenuBarButtonTemplate();
	};
}


MenuBarButtonTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	MenuBarButtonTemplate::MenuBarButtonTemplate()
	{
		InitializeComponents();
	}
}


MenuItemButtonTemplate.h :
namespace demos
{
	class MenuItemButtonTemplate : public demos::MenuItemButtonTemplate_<demos::MenuItemButtonTemplate>
	{
		friend class demos::MenuItemButtonTemplate_<demos::MenuItemButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::MenuItemButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MenuItemButtonTemplate();
	};
}


MenuItemButtonTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	MenuItemButtonTemplate::MenuItemButtonTemplate()
	{
		InitializeComponents();
	}
}


MenuSplitterTemplate.h :
namespace demos
{
	class MenuSplitterTemplate : public demos::MenuSplitterTemplate_<demos::MenuSplitterTemplate>
	{
		friend class demos::MenuSplitterTemplate_<demos::MenuSplitterTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::MenuSplitterTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MenuSplitterTemplate();
	};
}


MenuSplitterTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	MenuSplitterTemplate::MenuSplitterTemplate()
	{
		InitializeComponents();
	}
}


MultilineTextBoxTemplate.h :
namespace demos
{
	class MultilineTextBoxTemplate : public demos::MultilineTextBoxTemplate_<demos::MultilineTextBoxTemplate>
	{
		friend class demos::MultilineTextBoxTemplate_<demos::MultilineTextBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::MultilineTextBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MultilineTextBoxTemplate();
	};
}


MultilineTextBoxTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	MultilineTextBoxTemplate::MultilineTextBoxTemplate()
	{
		InitializeComponents();
	}
}


ProgressBarTemplate.h :
namespace demos
{
	class ProgressBarTemplate : public demos::ProgressBarTemplate_<demos::ProgressBarTemplate>
	{
		friend class demos::ProgressBarTemplate_<demos::ProgressBarTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ProgressBarTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ProgressBarTemplate();
	};
}


ProgressBarTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ProgressBarTemplate::ProgressBarTemplate()
	{
		InitializeComponents();
	}
}


RadioButtonTemplate.h :
namespace demos
{
	class RadioButtonTemplate : public demos::RadioButtonTemplate_<demos::RadioButtonTemplate>
	{
		friend class demos::RadioButtonTemplate_<demos::RadioButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::RadioButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		RadioButtonTemplate();
	};
}


RadioButtonTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	RadioButtonTemplate::RadioButtonTemplate()
	{
		InitializeComponents();
	}
}


RadioTextListTemplate.h :
namespace demos
{
	class RadioTextListTemplate : public demos::RadioTextListTemplate_<demos::RadioTextListTemplate>
	{
		friend class demos::RadioTextListTemplate_<demos::RadioTextListTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::RadioTextListTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		RadioTextListTemplate();
	};
}


RadioTextListTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	RadioTextListTemplate::RadioTextListTemplate()
	{
		InitializeComponents();
	}
}


RightScrollButtonTemplate.h :
namespace demos
{
	class RightScrollButtonTemplate : public demos::RightScrollButtonTemplate_<demos::RightScrollButtonTemplate>
	{
		friend class demos::RightScrollButtonTemplate_<demos::RightScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::RightScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		RightScrollButtonTemplate();
	};
}


RightScrollButtonTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	RightScrollButtonTemplate::RightScrollButtonTemplate()
	{
		InitializeComponents();
	}
}


ScrollViewTemplate.h :
namespace demos
{
	class ScrollViewTemplate : public demos::ScrollViewTemplate_<demos::ScrollViewTemplate>
	{
		friend class demos::ScrollViewTemplate_<demos::ScrollViewTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ScrollViewTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ScrollViewTemplate();
	};
}


ScrollViewTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ScrollViewTemplate::ScrollViewTemplate()
	{
		InitializeComponents();
	}
}


SinglelineTextBoxTemplate.h :
namespace demos
{
	class SinglelineTextBoxTemplate : public demos::SinglelineTextBoxTemplate_<demos::SinglelineTextBoxTemplate>
	{
		friend class demos::SinglelineTextBoxTemplate_<demos::SinglelineTextBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::SinglelineTextBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		SinglelineTextBoxTemplate();
	};
}


SinglelineTextBoxTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	SinglelineTextBoxTemplate::SinglelineTextBoxTemplate()
	{
		InitializeComponents();
	}
}


TabDropdownTemplate.h :
namespace demos
{
	class TabDropdownTemplate : public demos::TabDropdownTemplate_<demos::TabDropdownTemplate>
	{
		friend class demos::TabDropdownTemplate_<demos::TabDropdownTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TabDropdownTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TabDropdownTemplate();
	};
}


TabDropdownTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	TabDropdownTemplate::TabDropdownTemplate()
	{
		InitializeComponents();
	}
}


TabHeaderTemplate.h :
namespace demos
{
	class TabHeaderTemplate : public demos::TabHeaderTemplate_<demos::TabHeaderTemplate>
	{
		friend class demos::TabHeaderTemplate_<demos::TabHeaderTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TabHeaderTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TabHeaderTemplate();
	};
}


TabHeaderTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	TabHeaderTemplate::TabHeaderTemplate()
	{
		InitializeComponents();
	}
}


TabTemplate.h :
namespace demos
{
	class TabTemplate : public demos::TabTemplate_<demos::TabTemplate>
	{
		friend class demos::TabTemplate_<demos::TabTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TabTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TabTemplate();
	};
}


TabTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	TabTemplate::TabTemplate()
	{
		InitializeComponents();
	}
}


TextListTemplate.h :
namespace demos
{
	class TextListTemplate : public demos::TextListTemplate_<demos::TextListTemplate>
	{
		friend class demos::TextListTemplate_<demos::TextListTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TextListTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TextListTemplate();
	};
}


TextListTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	TextListTemplate::TextListTemplate()
	{
		InitializeComponents();
	}
}


ToolstripButtonTemplate.h :
namespace demos
{
	class ToolstripButtonTemplate : public demos::ToolstripButtonTemplate_<demos::ToolstripButtonTemplate>
	{
		friend class demos::ToolstripButtonTemplate_<demos::ToolstripButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripButtonTemplate();
	};
}


ToolstripButtonTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ToolstripButtonTemplate::ToolstripButtonTemplate()
	{
		InitializeComponents();
	}
}


ToolstripDropdownButtonTemplate.h :
namespace demos
{
	class ToolstripDropdownButtonTemplate : public demos::ToolstripDropdownButtonTemplate_<demos::ToolstripDropdownButtonTemplate>
	{
		friend class demos::ToolstripDropdownButtonTemplate_<demos::ToolstripDropdownButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripDropdownButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripDropdownButtonTemplate();
	};
}


ToolstripDropdownButtonTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ToolstripDropdownButtonTemplate::ToolstripDropdownButtonTemplate()
	{
		InitializeComponents();
	}
}


ToolstripMenuTemplate.h :
namespace demos
{
	class ToolstripMenuTemplate : public demos::ToolstripMenuTemplate_<demos::ToolstripMenuTemplate>
	{
		friend class demos::ToolstripMenuTemplate_<demos::ToolstripMenuTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripMenuTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripMenuTemplate();
	};
}


ToolstripMenuTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ToolstripMenuTemplate::ToolstripMenuTemplate()
	{
		InitializeComponents();
	}
}


ToolstripSplitArrowTemplate.h :
namespace demos
{
	class ToolstripSplitArrowTemplate : public demos::ToolstripSplitArrowTemplate_<demos::ToolstripSplitArrowTemplate>
	{
		friend class demos::ToolstripSplitArrowTemplate_<demos::ToolstripSplitArrowTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripSplitArrowTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripSplitArrowTemplate();
	};
}


ToolstripSplitArrowTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ToolstripSplitArrowTemplate::ToolstripSplitArrowTemplate()
	{
		InitializeComponents();
	}
}


ToolstripSplitButtonTemplate.h :
namespace demos
{
	class ToolstripSplitButtonTemplate : public demos::ToolstripSplitButtonTemplate_<demos::ToolstripSplitButtonTemplate>
	{
		friend class demos::ToolstripSplitButtonTemplate_<demos::ToolstripSplitButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripSplitButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripSplitButtonTemplate();
	};
}


ToolstripSplitButtonTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ToolstripSplitButtonTemplate::ToolstripSplitButtonTemplate()
	{
		InitializeComponents();
	}
}


ToolstripSplitterTemplate.h :
namespace demos
{
	class ToolstripSplitterTemplate : public demos::ToolstripSplitterTemplate_<demos::ToolstripSplitterTemplate>
	{
		friend class demos::ToolstripSplitterTemplate_<demos::ToolstripSplitterTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripSplitterTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripSplitterTemplate();
	};
}


ToolstripSplitterTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ToolstripSplitterTemplate::ToolstripSplitterTemplate()
	{
		InitializeComponents();
	}
}


ToolstripTemplate.h :
namespace demos
{
	class ToolstripTemplate : public demos::ToolstripTemplate_<demos::ToolstripTemplate>
	{
		friend class demos::ToolstripTemplate_<demos::ToolstripTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripTemplate();
	};
}


ToolstripTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	ToolstripTemplate::ToolstripTemplate()
	{
		InitializeComponents();
	}
}


TooltipTemplate.h :
namespace demos
{
	class TooltipTemplate : public demos::TooltipTemplate_<demos::TooltipTemplate>
	{
		friend class demos::TooltipTemplate_<demos::TooltipTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TooltipTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TooltipTemplate();
	};
}


TooltipTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	TooltipTemplate::TooltipTemplate()
	{
		InitializeComponents();
	}
}


TopScrollButtonTemplate.h :
namespace demos
{
	class TopScrollButtonTemplate : public demos::TopScrollButtonTemplate_<demos::TopScrollButtonTemplate>
	{
		friend class demos::TopScrollButtonTemplate_<demos::TopScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TopScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TopScrollButtonTemplate();
	};
}


TopScrollButtonTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	TopScrollButtonTemplate::TopScrollButtonTemplate()
	{
		InitializeComponents();
	}
}


TreeViewTemplate.h :
namespace demos
{
	class TreeViewTemplate : public demos::TreeViewTemplate_<demos::TreeViewTemplate>
	{
		friend class demos::TreeViewTemplate_<demos::TreeViewTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TreeViewTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TreeViewTemplate();
	};
}


TreeViewTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	TreeViewTemplate::TreeViewTemplate()
	{
		InitializeComponents();
	}
}


VScrollHandleTemplate.h :
namespace demos
{
	class VScrollHandleTemplate : public demos::VScrollHandleTemplate_<demos::VScrollHandleTemplate>
	{
		friend class demos::VScrollHandleTemplate_<demos::VScrollHandleTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::VScrollHandleTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		VScrollHandleTemplate();
	};
}


VScrollHandleTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	VScrollHandleTemplate::VScrollHandleTemplate()
	{
		InitializeComponents();
	}
}


VScrollTemplate.h :
namespace demos
{
	class VScrollTemplate : public demos::VScrollTemplate_<demos::VScrollTemplate>
	{
		friend class demos::VScrollTemplate_<demos::VScrollTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::VScrollTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		void OnHandleMouseDown(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		void OnHandleMouseMove(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		void OnHandleMouseUp(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		VScrollTemplate();
	};
}


VScrollTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	void VScrollTemplate::OnHandleMouseDown(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	void VScrollTemplate::OnHandleMouseMove(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	void VScrollTemplate::OnHandleMouseUp(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	VScrollTemplate::VScrollTemplate()
	{
		InitializeComponents();
	}
}


VTrackerTemplate.h :
namespace demos
{
	class VTrackerTemplate : public demos::VTrackerTemplate_<demos::VTrackerTemplate>
	{
		friend class demos::VTrackerTemplate_<demos::VTrackerTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::VTrackerTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		void OnHandleMouseDown(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		void OnHandleMouseMove(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		void OnHandleMouseUp(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments);
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		VTrackerTemplate();
	};
}


VTrackerTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	void VTrackerTemplate::OnHandleMouseDown(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	void VTrackerTemplate::OnHandleMouseMove(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	void VTrackerTemplate::OnHandleMouseUp(GuiGraphicsComposition* sender, vl::presentation::compositions::GuiMouseEventArgs& arguments)
	{
	}

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	VTrackerTemplate::VTrackerTemplate()
	{
		InitializeComponents();
	}
}


WindowTemplate.h :
namespace demos
{
	class WindowTemplate : public demos::WindowTemplate_<demos::WindowTemplate>
	{
		friend class demos::WindowTemplate_<demos::WindowTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::WindowTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		WindowTemplate();
	};
}


WindowTemplate.cpp :
namespace demos
{
	// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)

	// #endregion CLASS_MEMBER_GUIEVENT_HANDLER

	WindowTemplate::WindowTemplate()
	{
		InitializeComponents();
	}
}


*/

#endif
