class Node
{
}

class Literal:Node
{
	enum Value
	{
		True,
		False,
		Null,
	}

	Value value;
}

class String:Node
{
	token content(JsonUnescapingString);
}

class Number:Node
{
	token content;
}

class Array:Node									@RootNode(), @Entry()
{
	Node[] items;
}

class ObjectField:Node
{
	token name(JsonUnescapingString)				@Intellisense();
	Node value;
}

class Object:Node									@RootNode(), @Entry()
{
	ObjectField[] fields;
}

token TRUEVALUE = "true"							@Colorize("Keyword");
token FALSEVALUE = "false"							@Colorize("Keyword");
token NULLVALUE = "null"							@Colorize("Keyword");
token OBJOPEN = "\{";
token OBJCLOSE = "\}";
token ARROPEN = "\[";
token ARRCLOSE = "\]";
token COMMA = ",";
token COLON = ":";
token NUMBER = "[\-]?\d+(.\d+)?([eE][+\-]?\d+)?"	@Colorize("Number");
token STRING = """([^\\""]|\\[^u]|\\u\d{4})*"""		@Colorize("Text");

discardtoken SPACE = "\s+";

rule Node JLiteral
	= STRING:content as String
	= NUMBER:content as Number
	= "true" as Literal with {value = "True"}
	= "false" as Literal with {value = "False"}
	= "null" as Literal with {value = "Null"}
	;

rule ObjectField JField
	= STRING:name ":" JValue:value as ObjectField
	;

rule Object JObject
	= "{" [JField:fields {"," JField:fields} ] "}" as Object
	;

rule Array JArray
	= "[" [JValue:items {"," JValue:items} ] "]" as Array
	;

rule Node JValue
	= !JLiteral
	= !JObject
	= !JArray
	;

rule Node JRoot										@RootNode(), @Entry()
	= !JObject
	= !JArray
	;