/***********************************************************************
Vczh Library++ 3.0
Developer: Zihan Chen(vczh)
GacUI::Partial Classes

This file is generated by: Vczh GacUI Resource Code Generator
************************************************************************
DO NOT MODIFY
***********************************************************************/

#ifndef VCZH_GACUI_RESOURCE_CODE_GENERATOR_HelloWorld_PARTIAL_CLASSES
#define VCZH_GACUI_RESOURCE_CODE_GENERATOR_HelloWorld_PARTIAL_CLASSES

#include "..\..\..\..\Libraries\GacUI\Public\Source\GacUIReflection.h"

namespace data
{
	struct Point;
	class Node;
	class PointNode;
	class PointProvider;
}
namespace demos
{
	class BottomScrollButtonTemplate;
	class ButtonTemplate;
	class CheckBoxTemplate;
	class CheckItemBackgroundTemplate;
	class CheckTextListTemplate;
	class ComboBoxTemplate;
	class DatePickerTemplate;
	class DocumentLabelTemplate;
	class ExpandingDecoratorTemplate;
	class GroupBoxTemplate;
	class HScrollHandleTemplate;
	class HScrollTemplate;
	class HTrackerTemplate;
	class ItemBackgroundTemplate;
	class LabelTemplate;
	class LeftScrollButtonTemplate;
	class ListViewColumnHeaderTemplate;
	class ListViewTemplate;
	class MainWindow;
	class MenuBarButtonTemplate;
	class MenuItemButtonTemplate;
	class MenuSplitterTemplate;
	class MultilineTextBoxTemplate;
	class ProgressBarTemplate;
	class RadioButtonTemplate;
	class RadioTextListTemplate;
	class RightScrollButtonTemplate;
	class ScrollViewTemplate;
	class SinglelineTextBoxTemplate;
	class TabDropdownTemplate;
	class TabHeaderTemplate;
	class TabTemplate;
	class TextListTemplate;
	class ToolstripButtonTemplate;
	class ToolstripDropdownButtonTemplate;
	class ToolstripMenuTemplate;
	class ToolstripSplitArrowTemplate;
	class ToolstripSplitButtonTemplate;
	class ToolstripSplitterTemplate;
	class ToolstripTemplate;
	class TopScrollButtonTemplate;
	class TreeViewTemplate;
	class VScrollHandleTemplate;
	class VScrollTemplate;
	class VTrackerTemplate;
	class WindowTemplate;

}
namespace data
{
	struct Point
	{
		vl::vint32_t X;
		vl::vint32_t Y;
	};

	class Node : public vl::Object, public vl::reflection::Description<Node>
	{
	public:
		vl::Ptr<data::Node> Next;
	};

	class PointNode : public data::Node, public vl::reflection::Description<PointNode>
	{
	public:
		data::Point Point;
	};

	class PointProvider : public virtual vl::reflection::IDescriptable, public vl::reflection::Description<PointProvider>
	{
	public:

		virtual vl::vint32_t GetCount() = 0;
		vl::Event<void()> CountChanged;

		virtual data::Point GetPoint(vl::vint32_t index) = 0;
	};

}
namespace demos
{
	template<typename TImpl>
	class BottomScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		BottomScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::BottomScrollButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::ButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class CheckBoxTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		CheckBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::CheckBoxTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class CheckItemBackgroundTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		CheckItemBackgroundTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::CheckItemBackgroundTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class CheckTextListTemplate_ : public vl::presentation::templates::GuiTextListTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTextListTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		CheckTextListTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>(L"demos::CheckTextListTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ComboBoxTemplate_ : public vl::presentation::templates::GuiDateComboBoxTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDateComboBoxTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiDateComboBoxTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ComboBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDateComboBoxTemplate>(L"demos::ComboBoxTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class DatePickerTemplate_ : public vl::presentation::templates::GuiDatePickerTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDatePickerTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiDatePickerTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		DatePickerTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiDatePickerTemplate>(L"demos::DatePickerTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class DocumentLabelTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiControlTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		DocumentLabelTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"demos::DocumentLabelTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ExpandingDecoratorTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ExpandingDecoratorTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::ExpandingDecoratorTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class GroupBoxTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiControlTemplate* self;
		vl::presentation::compositions::GuiBoundsComposition* titleBounds;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
				GUI_INSTANCE_REFERENCE(titleBounds);
			}
			else
			{
			}
		}
	public:
		GroupBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"demos::GroupBoxTemplate")
			,container(0)
			,self(0)
			,titleBounds(0)
		{
		}
	};

	template<typename TImpl>
	class HScrollHandleTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		HScrollHandleTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::HScrollHandleTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class HScrollTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiPartialViewComposition* handle;
		vl::presentation::compositions::GuiBoundsComposition* handleContainer;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(handleContainer);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		HScrollTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"demos::HScrollTemplate")
			,handle(0)
			,handleContainer(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class HTrackerTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* handle;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		HTrackerTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"demos::HTrackerTemplate")
			,handle(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ItemBackgroundTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ItemBackgroundTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::ItemBackgroundTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class LabelTemplate_ : public vl::presentation::templates::GuiLabelTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiLabelTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiLabelTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		LabelTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiLabelTemplate>(L"demos::LabelTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class LeftScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		LeftScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::LeftScrollButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ListViewColumnHeaderTemplate_ : public vl::presentation::templates::GuiListViewColumnHeaderTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewColumnHeaderTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::controls::GuiSelectableButton* buttonArrow;
		vl::presentation::templates::GuiListViewColumnHeaderTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(buttonArrow);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ListViewColumnHeaderTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewColumnHeaderTemplate>(L"demos::ListViewColumnHeaderTemplate")
			,buttonArrow(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ListViewTemplate_ : public vl::presentation::templates::GuiListViewTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiListViewTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ListViewTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiListViewTemplate>(L"demos::ListViewTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class MainWindow_ : public vl::presentation::controls::GuiWindow, public vl::presentation::GuiInstancePartialClass<vl::presentation::controls::GuiWindow>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
		Ptr<data::PointProvider> ViewModel_;
		vl::vint32_t PointCount_;
		data::Point PointData_;
	protected:
		vl::WString pointCountInternal;
		vl::presentation::controls::GuiButton* buttonAddTab;
		vl::presentation::controls::GuiButton* buttonEnable;
		vl::presentation::controls::GuiComboBoxListControl* comboBoxSeasons;
		vl::presentation::controls::GuiToolstripCommand* commandEditCopy;
		vl::presentation::controls::GuiToolstripCommand* commandEditCut;
		vl::presentation::controls::GuiToolstripCommand* commandEditDelete;
		vl::presentation::controls::GuiToolstripCommand* commandEditPaste;
		vl::presentation::controls::GuiToolstripCommand* commandEditRedo;
		vl::presentation::controls::GuiToolstripCommand* commandEditSelect;
		vl::presentation::controls::GuiToolstripCommand* commandEditUndo;
		vl::presentation::controls::GuiToolstripCommand* commandFileExit;
		vl::presentation::controls::GuiToolstripCommand* commandFileNew;
		vl::presentation::controls::GuiToolstripCommand* commandFileNewRtf;
		vl::presentation::controls::GuiToolstripCommand* commandFileNewText;
		vl::presentation::controls::GuiToolstripCommand* commandFileOpen;
		vl::presentation::controls::GuiToolstripCommand* commandFileOpenRtf;
		vl::presentation::controls::GuiToolstripCommand* commandFileOpenText;
		vl::presentation::controls::GuiToolstripCommand* commandFilePrint;
		vl::presentation::controls::GuiToolstripCommand* commandFileSave;
		vl::presentation::controls::GuiToolstripCommand* commandFileSaveAs;
		vl::presentation::controls::GuiToolstripMenu* menuDropDown;
		vl::presentation::controls::GuiSelectableButton::MutexGroupController* radioGroup;
		vl::presentation::controls::GuiWindow* self;
		vl::presentation::controls::GuiTab* tabControls;
		vl::presentation::controls::GuiTabPage* tabPageBasic;
		vl::presentation::controls::GuiTabPage* tabPageList;
		vl::presentation::controls::GuiTabPage* tabPageText;
		vl::presentation::controls::GuiTabPage* tabPageToolstrip;
		vl::presentation::controls::GuiScroll* tracker;

		void InitializeComponents(Ptr<data::PointProvider> ViewModel)
		{
			ViewModel_ = ViewModel;
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(buttonAddTab);
				GUI_INSTANCE_REFERENCE(buttonEnable);
				GUI_INSTANCE_REFERENCE(comboBoxSeasons);
				GUI_INSTANCE_REFERENCE(commandEditCopy);
				GUI_INSTANCE_REFERENCE(commandEditCut);
				GUI_INSTANCE_REFERENCE(commandEditDelete);
				GUI_INSTANCE_REFERENCE(commandEditPaste);
				GUI_INSTANCE_REFERENCE(commandEditRedo);
				GUI_INSTANCE_REFERENCE(commandEditSelect);
				GUI_INSTANCE_REFERENCE(commandEditUndo);
				GUI_INSTANCE_REFERENCE(commandFileExit);
				GUI_INSTANCE_REFERENCE(commandFileNew);
				GUI_INSTANCE_REFERENCE(commandFileNewRtf);
				GUI_INSTANCE_REFERENCE(commandFileNewText);
				GUI_INSTANCE_REFERENCE(commandFileOpen);
				GUI_INSTANCE_REFERENCE(commandFileOpenRtf);
				GUI_INSTANCE_REFERENCE(commandFileOpenText);
				GUI_INSTANCE_REFERENCE(commandFilePrint);
				GUI_INSTANCE_REFERENCE(commandFileSave);
				GUI_INSTANCE_REFERENCE(commandFileSaveAs);
				GUI_INSTANCE_REFERENCE(menuDropDown);
				GUI_INSTANCE_REFERENCE(radioGroup);
				GUI_INSTANCE_REFERENCE(self);
				GUI_INSTANCE_REFERENCE(tabControls);
				GUI_INSTANCE_REFERENCE(tabPageBasic);
				GUI_INSTANCE_REFERENCE(tabPageList);
				GUI_INSTANCE_REFERENCE(tabPageText);
				GUI_INSTANCE_REFERENCE(tabPageToolstrip);
				GUI_INSTANCE_REFERENCE(tracker);
			}
			else
			{
				ViewModel_ = 0;
			}
		}
	public:
		MainWindow_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::controls::GuiWindow>(L"demos::MainWindow")
			,vl::presentation::controls::GuiWindow([](){
vl::collections::List<vl::reflection::description::ITypeDescriptor*> types;
types.Add(vl::reflection::description::GetTypeDescriptor<demos::WindowTemplate>());
auto factory = vl::presentation::templates::GuiTemplate::IFactory::CreateTemplateFactory(types);
auto style = new vl::presentation::templates::GuiWindowTemplate_StyleProvider(factory);
return style;
}())
			,buttonAddTab(0)
			,buttonEnable(0)
			,comboBoxSeasons(0)
			,commandEditCopy(0)
			,commandEditCut(0)
			,commandEditDelete(0)
			,commandEditPaste(0)
			,commandEditRedo(0)
			,commandEditSelect(0)
			,commandEditUndo(0)
			,commandFileExit(0)
			,commandFileNew(0)
			,commandFileNewRtf(0)
			,commandFileNewText(0)
			,commandFileOpen(0)
			,commandFileOpenRtf(0)
			,commandFileOpenText(0)
			,commandFilePrint(0)
			,commandFileSave(0)
			,commandFileSaveAs(0)
			,menuDropDown(0)
			,radioGroup(0)
			,self(0)
			,tabControls(0)
			,tabPageBasic(0)
			,tabPageList(0)
			,tabPageText(0)
			,tabPageToolstrip(0)
			,tracker(0)
		{
		}

		Ptr<data::PointProvider> GetViewModel()
		{
			return ViewModel_;
		}

		vl::Event<void()> PointCountChanged;

		vl::vint32_t GetPointCount()
		{
			return PointCount_;
		}

		vl::Event<void()> PointDataChanged;

		data::Point GetPointData()
		{
			return PointData_;
		}

		void SetPointData(data::Point value)
		{
			PointData_ = value;
			PointDataChanged();
		}
	};

	template<typename TImpl>
	class MenuBarButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		MenuBarButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"demos::MenuBarButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class MenuItemButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		MenuItemButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"demos::MenuItemButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class MenuSplitterTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
			}
			else
			{
			}
		}
	public:
		MenuSplitterTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"demos::MenuSplitterTemplate")
		{
		}
	};

	template<typename TImpl>
	class MultilineTextBoxTemplate_ : public vl::presentation::templates::GuiMultilineTextBoxTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMultilineTextBoxTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiMultilineTextBoxTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		MultilineTextBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMultilineTextBoxTemplate>(L"demos::MultilineTextBoxTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ProgressBarTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ProgressBarTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"demos::ProgressBarTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class RadioButtonTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		RadioButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::RadioButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class RadioTextListTemplate_ : public vl::presentation::templates::GuiTextListTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTextListTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		RadioTextListTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>(L"demos::RadioTextListTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class RightScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		RightScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::RightScrollButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ScrollViewTemplate_ : public vl::presentation::templates::GuiScrollViewTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollViewTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiScrollViewTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ScrollViewTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollViewTemplate>(L"demos::ScrollViewTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class SinglelineTextBoxTemplate_ : public vl::presentation::templates::GuiSinglelineTextBoxTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSinglelineTextBoxTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiSinglelineTextBoxTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		SinglelineTextBoxTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSinglelineTextBoxTemplate>(L"demos::SinglelineTextBoxTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class TabDropdownTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TabDropdownTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::TabDropdownTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class TabHeaderTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TabHeaderTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::TabHeaderTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class TabTemplate_ : public vl::presentation::templates::GuiTabTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTabTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::compositions::GuiBoundsComposition* header;
		vl::presentation::templates::GuiTabTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(header);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TabTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTabTemplate>(L"demos::TabTemplate")
			,container(0)
			,header(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class TextListTemplate_ : public vl::presentation::templates::GuiTextListTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTextListTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TextListTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTextListTemplate>(L"demos::TextListTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"demos::ToolstripButtonTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripDropdownButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripDropdownButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"demos::ToolstripDropdownButtonTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripMenuTemplate_ : public vl::presentation::templates::GuiMenuTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMenuTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
			}
			else
			{
			}
		}
	public:
		ToolstripMenuTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiMenuTemplate>(L"demos::ToolstripMenuTemplate")
			,container(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripSplitArrowTemplate_ : public vl::presentation::templates::GuiSelectableButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiSelectableButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripSplitArrowTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiSelectableButtonTemplate>(L"demos::ToolstripSplitArrowTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripSplitButtonTemplate_ : public vl::presentation::templates::GuiToolstripButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::controls::GuiSelectableButton* buttonArrow;
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiToolstripButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(buttonArrow);
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		ToolstripSplitButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiToolstripButtonTemplate>(L"demos::ToolstripSplitButtonTemplate")
			,buttonArrow(0)
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class ToolstripSplitterTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
			}
			else
			{
			}
		}
	public:
		ToolstripSplitterTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"demos::ToolstripSplitterTemplate")
		{
		}
	};

	template<typename TImpl>
	class ToolstripTemplate_ : public vl::presentation::templates::GuiControlTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
			}
			else
			{
			}
		}
	public:
		ToolstripTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiControlTemplate>(L"demos::ToolstripTemplate")
		{
		}
	};

	template<typename TImpl>
	class TopScrollButtonTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TopScrollButtonTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::TopScrollButtonTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class TreeViewTemplate_ : public vl::presentation::templates::GuiTreeViewTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTreeViewTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiTreeViewTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		TreeViewTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiTreeViewTemplate>(L"demos::TreeViewTemplate")
			,container(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class VScrollHandleTemplate_ : public vl::presentation::templates::GuiButtonTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::templates::GuiButtonTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		VScrollHandleTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiButtonTemplate>(L"demos::VScrollHandleTemplate")
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class VScrollTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiPartialViewComposition* handle;
		vl::presentation::compositions::GuiBoundsComposition* handleContainer;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(handleContainer);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		VScrollTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"demos::VScrollTemplate")
			,handle(0)
			,handleContainer(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class VTrackerTemplate_ : public vl::presentation::templates::GuiScrollTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* handle;
		vl::presentation::templates::GuiScrollTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(handle);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		VTrackerTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiScrollTemplate>(L"demos::VTrackerTemplate")
			,handle(0)
			,self(0)
		{
		}
	};

	template<typename TImpl>
	class WindowTemplate_ : public vl::presentation::templates::GuiWindowTemplate, public vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiWindowTemplate>, public vl::reflection::Description<TImpl>
	{
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<TImpl>;
	private:
	protected:
		vl::presentation::compositions::GuiBoundsComposition* container;
		vl::presentation::templates::GuiWindowTemplate* self;

		void InitializeComponents()
		{
			if (InitializeFromResource())
			{
				GUI_INSTANCE_REFERENCE(container);
				GUI_INSTANCE_REFERENCE(self);
			}
			else
			{
			}
		}
	public:
		WindowTemplate_()
			:vl::presentation::GuiInstancePartialClass<vl::presentation::templates::GuiWindowTemplate>(L"demos::WindowTemplate")
			,container(0)
			,self(0)
		{
		}
	};

}
namespace vl
{
	namespace reflection
	{
		namespace description
		{
			DECL_TYPE_INFO(data::Node)
			DECL_TYPE_INFO(data::Point)
			DECL_TYPE_INFO(data::PointNode)
			DECL_TYPE_INFO(data::PointProvider)
			DECL_TYPE_INFO(demos::BottomScrollButtonTemplate)
			DECL_TYPE_INFO(demos::ButtonTemplate)
			DECL_TYPE_INFO(demos::CheckBoxTemplate)
			DECL_TYPE_INFO(demos::CheckItemBackgroundTemplate)
			DECL_TYPE_INFO(demos::CheckTextListTemplate)
			DECL_TYPE_INFO(demos::ComboBoxTemplate)
			DECL_TYPE_INFO(demos::DatePickerTemplate)
			DECL_TYPE_INFO(demos::DocumentLabelTemplate)
			DECL_TYPE_INFO(demos::ExpandingDecoratorTemplate)
			DECL_TYPE_INFO(demos::GroupBoxTemplate)
			DECL_TYPE_INFO(demos::HScrollHandleTemplate)
			DECL_TYPE_INFO(demos::HScrollTemplate)
			DECL_TYPE_INFO(demos::HTrackerTemplate)
			DECL_TYPE_INFO(demos::ItemBackgroundTemplate)
			DECL_TYPE_INFO(demos::LabelTemplate)
			DECL_TYPE_INFO(demos::LeftScrollButtonTemplate)
			DECL_TYPE_INFO(demos::ListViewColumnHeaderTemplate)
			DECL_TYPE_INFO(demos::ListViewTemplate)
			DECL_TYPE_INFO(demos::MainWindow)
			DECL_TYPE_INFO(demos::MenuBarButtonTemplate)
			DECL_TYPE_INFO(demos::MenuItemButtonTemplate)
			DECL_TYPE_INFO(demos::MenuSplitterTemplate)
			DECL_TYPE_INFO(demos::MultilineTextBoxTemplate)
			DECL_TYPE_INFO(demos::ProgressBarTemplate)
			DECL_TYPE_INFO(demos::RadioButtonTemplate)
			DECL_TYPE_INFO(demos::RadioTextListTemplate)
			DECL_TYPE_INFO(demos::RightScrollButtonTemplate)
			DECL_TYPE_INFO(demos::ScrollViewTemplate)
			DECL_TYPE_INFO(demos::SinglelineTextBoxTemplate)
			DECL_TYPE_INFO(demos::TabDropdownTemplate)
			DECL_TYPE_INFO(demos::TabHeaderTemplate)
			DECL_TYPE_INFO(demos::TabTemplate)
			DECL_TYPE_INFO(demos::TextListTemplate)
			DECL_TYPE_INFO(demos::ToolstripButtonTemplate)
			DECL_TYPE_INFO(demos::ToolstripDropdownButtonTemplate)
			DECL_TYPE_INFO(demos::ToolstripMenuTemplate)
			DECL_TYPE_INFO(demos::ToolstripSplitArrowTemplate)
			DECL_TYPE_INFO(demos::ToolstripSplitButtonTemplate)
			DECL_TYPE_INFO(demos::ToolstripSplitterTemplate)
			DECL_TYPE_INFO(demos::ToolstripTemplate)
			DECL_TYPE_INFO(demos::TopScrollButtonTemplate)
			DECL_TYPE_INFO(demos::TreeViewTemplate)
			DECL_TYPE_INFO(demos::VScrollHandleTemplate)
			DECL_TYPE_INFO(demos::VScrollTemplate)
			DECL_TYPE_INFO(demos::VTrackerTemplate)
			DECL_TYPE_INFO(demos::WindowTemplate)

		}
	}
}
namespace demos
{
	class BottomScrollButtonTemplate : public demos::BottomScrollButtonTemplate_<demos::BottomScrollButtonTemplate>
	{
		friend class demos::BottomScrollButtonTemplate_<demos::BottomScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::BottomScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		BottomScrollButtonTemplate();
	};
}


namespace demos
{
	class ButtonTemplate : public demos::ButtonTemplate_<demos::ButtonTemplate>
	{
		friend class demos::ButtonTemplate_<demos::ButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ButtonTemplate();
	};
}


namespace demos
{
	class CheckBoxTemplate : public demos::CheckBoxTemplate_<demos::CheckBoxTemplate>
	{
		friend class demos::CheckBoxTemplate_<demos::CheckBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::CheckBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		CheckBoxTemplate();
	};
}


namespace demos
{
	class CheckItemBackgroundTemplate : public demos::CheckItemBackgroundTemplate_<demos::CheckItemBackgroundTemplate>
	{
		friend class demos::CheckItemBackgroundTemplate_<demos::CheckItemBackgroundTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::CheckItemBackgroundTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		CheckItemBackgroundTemplate();
	};
}


namespace demos
{
	class CheckTextListTemplate : public demos::CheckTextListTemplate_<demos::CheckTextListTemplate>
	{
		friend class demos::CheckTextListTemplate_<demos::CheckTextListTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::CheckTextListTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		CheckTextListTemplate();
	};
}


namespace demos
{
	class ComboBoxTemplate : public demos::ComboBoxTemplate_<demos::ComboBoxTemplate>
	{
		friend class demos::ComboBoxTemplate_<demos::ComboBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ComboBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ComboBoxTemplate();
	};
}


namespace demos
{
	class DatePickerTemplate : public demos::DatePickerTemplate_<demos::DatePickerTemplate>
	{
		friend class demos::DatePickerTemplate_<demos::DatePickerTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::DatePickerTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		DatePickerTemplate();
	};
}


namespace demos
{
	class DocumentLabelTemplate : public demos::DocumentLabelTemplate_<demos::DocumentLabelTemplate>
	{
		friend class demos::DocumentLabelTemplate_<demos::DocumentLabelTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::DocumentLabelTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		DocumentLabelTemplate();
	};
}


namespace demos
{
	class ExpandingDecoratorTemplate : public demos::ExpandingDecoratorTemplate_<demos::ExpandingDecoratorTemplate>
	{
		friend class demos::ExpandingDecoratorTemplate_<demos::ExpandingDecoratorTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ExpandingDecoratorTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ExpandingDecoratorTemplate();
	};
}


namespace demos
{
	class GroupBoxTemplate : public demos::GroupBoxTemplate_<demos::GroupBoxTemplate>
	{
		friend class demos::GroupBoxTemplate_<demos::GroupBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::GroupBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		GroupBoxTemplate();
	};
}


namespace demos
{
	class HScrollHandleTemplate : public demos::HScrollHandleTemplate_<demos::HScrollHandleTemplate>
	{
		friend class demos::HScrollHandleTemplate_<demos::HScrollHandleTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::HScrollHandleTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		HScrollHandleTemplate();
	};
}


namespace demos
{
	class ItemBackgroundTemplate : public demos::ItemBackgroundTemplate_<demos::ItemBackgroundTemplate>
	{
		friend class demos::ItemBackgroundTemplate_<demos::ItemBackgroundTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ItemBackgroundTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ItemBackgroundTemplate();
	};
}


namespace demos
{
	class LabelTemplate : public demos::LabelTemplate_<demos::LabelTemplate>
	{
		friend class demos::LabelTemplate_<demos::LabelTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::LabelTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		LabelTemplate();
	};
}


namespace demos
{
	class LeftScrollButtonTemplate : public demos::LeftScrollButtonTemplate_<demos::LeftScrollButtonTemplate>
	{
		friend class demos::LeftScrollButtonTemplate_<demos::LeftScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::LeftScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		LeftScrollButtonTemplate();
	};
}


namespace demos
{
	class ListViewColumnHeaderTemplate : public demos::ListViewColumnHeaderTemplate_<demos::ListViewColumnHeaderTemplate>
	{
		friend class demos::ListViewColumnHeaderTemplate_<demos::ListViewColumnHeaderTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ListViewColumnHeaderTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ListViewColumnHeaderTemplate();
	};
}


namespace demos
{
	class ListViewTemplate : public demos::ListViewTemplate_<demos::ListViewTemplate>
	{
		friend class demos::ListViewTemplate_<demos::ListViewTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ListViewTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ListViewTemplate();
	};
}


namespace demos
{
	class MenuBarButtonTemplate : public demos::MenuBarButtonTemplate_<demos::MenuBarButtonTemplate>
	{
		friend class demos::MenuBarButtonTemplate_<demos::MenuBarButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::MenuBarButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MenuBarButtonTemplate();
	};
}


namespace demos
{
	class MenuItemButtonTemplate : public demos::MenuItemButtonTemplate_<demos::MenuItemButtonTemplate>
	{
		friend class demos::MenuItemButtonTemplate_<demos::MenuItemButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::MenuItemButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MenuItemButtonTemplate();
	};
}


namespace demos
{
	class MenuSplitterTemplate : public demos::MenuSplitterTemplate_<demos::MenuSplitterTemplate>
	{
		friend class demos::MenuSplitterTemplate_<demos::MenuSplitterTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::MenuSplitterTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MenuSplitterTemplate();
	};
}


namespace demos
{
	class MultilineTextBoxTemplate : public demos::MultilineTextBoxTemplate_<demos::MultilineTextBoxTemplate>
	{
		friend class demos::MultilineTextBoxTemplate_<demos::MultilineTextBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::MultilineTextBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		MultilineTextBoxTemplate();
	};
}


namespace demos
{
	class ProgressBarTemplate : public demos::ProgressBarTemplate_<demos::ProgressBarTemplate>
	{
		friend class demos::ProgressBarTemplate_<demos::ProgressBarTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ProgressBarTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ProgressBarTemplate();
	};
}


namespace demos
{
	class RadioButtonTemplate : public demos::RadioButtonTemplate_<demos::RadioButtonTemplate>
	{
		friend class demos::RadioButtonTemplate_<demos::RadioButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::RadioButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		RadioButtonTemplate();
	};
}


namespace demos
{
	class RadioTextListTemplate : public demos::RadioTextListTemplate_<demos::RadioTextListTemplate>
	{
		friend class demos::RadioTextListTemplate_<demos::RadioTextListTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::RadioTextListTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		RadioTextListTemplate();
	};
}


namespace demos
{
	class RightScrollButtonTemplate : public demos::RightScrollButtonTemplate_<demos::RightScrollButtonTemplate>
	{
		friend class demos::RightScrollButtonTemplate_<demos::RightScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::RightScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		RightScrollButtonTemplate();
	};
}


namespace demos
{
	class ScrollViewTemplate : public demos::ScrollViewTemplate_<demos::ScrollViewTemplate>
	{
		friend class demos::ScrollViewTemplate_<demos::ScrollViewTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ScrollViewTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ScrollViewTemplate();
	};
}


namespace demos
{
	class SinglelineTextBoxTemplate : public demos::SinglelineTextBoxTemplate_<demos::SinglelineTextBoxTemplate>
	{
		friend class demos::SinglelineTextBoxTemplate_<demos::SinglelineTextBoxTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::SinglelineTextBoxTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		SinglelineTextBoxTemplate();
	};
}


namespace demos
{
	class TabDropdownTemplate : public demos::TabDropdownTemplate_<demos::TabDropdownTemplate>
	{
		friend class demos::TabDropdownTemplate_<demos::TabDropdownTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TabDropdownTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TabDropdownTemplate();
	};
}


namespace demos
{
	class TabHeaderTemplate : public demos::TabHeaderTemplate_<demos::TabHeaderTemplate>
	{
		friend class demos::TabHeaderTemplate_<demos::TabHeaderTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TabHeaderTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TabHeaderTemplate();
	};
}


namespace demos
{
	class TabTemplate : public demos::TabTemplate_<demos::TabTemplate>
	{
		friend class demos::TabTemplate_<demos::TabTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TabTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TabTemplate();
	};
}


namespace demos
{
	class TextListTemplate : public demos::TextListTemplate_<demos::TextListTemplate>
	{
		friend class demos::TextListTemplate_<demos::TextListTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TextListTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TextListTemplate();
	};
}


namespace demos
{
	class ToolstripButtonTemplate : public demos::ToolstripButtonTemplate_<demos::ToolstripButtonTemplate>
	{
		friend class demos::ToolstripButtonTemplate_<demos::ToolstripButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripButtonTemplate();
	};
}


namespace demos
{
	class ToolstripDropdownButtonTemplate : public demos::ToolstripDropdownButtonTemplate_<demos::ToolstripDropdownButtonTemplate>
	{
		friend class demos::ToolstripDropdownButtonTemplate_<demos::ToolstripDropdownButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripDropdownButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripDropdownButtonTemplate();
	};
}


namespace demos
{
	class ToolstripMenuTemplate : public demos::ToolstripMenuTemplate_<demos::ToolstripMenuTemplate>
	{
		friend class demos::ToolstripMenuTemplate_<demos::ToolstripMenuTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripMenuTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripMenuTemplate();
	};
}


namespace demos
{
	class ToolstripSplitArrowTemplate : public demos::ToolstripSplitArrowTemplate_<demos::ToolstripSplitArrowTemplate>
	{
		friend class demos::ToolstripSplitArrowTemplate_<demos::ToolstripSplitArrowTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripSplitArrowTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripSplitArrowTemplate();
	};
}


namespace demos
{
	class ToolstripSplitButtonTemplate : public demos::ToolstripSplitButtonTemplate_<demos::ToolstripSplitButtonTemplate>
	{
		friend class demos::ToolstripSplitButtonTemplate_<demos::ToolstripSplitButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripSplitButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripSplitButtonTemplate();
	};
}


namespace demos
{
	class ToolstripSplitterTemplate : public demos::ToolstripSplitterTemplate_<demos::ToolstripSplitterTemplate>
	{
		friend class demos::ToolstripSplitterTemplate_<demos::ToolstripSplitterTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripSplitterTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripSplitterTemplate();
	};
}


namespace demos
{
	class ToolstripTemplate : public demos::ToolstripTemplate_<demos::ToolstripTemplate>
	{
		friend class demos::ToolstripTemplate_<demos::ToolstripTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::ToolstripTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		ToolstripTemplate();
	};
}


namespace demos
{
	class TopScrollButtonTemplate : public demos::TopScrollButtonTemplate_<demos::TopScrollButtonTemplate>
	{
		friend class demos::TopScrollButtonTemplate_<demos::TopScrollButtonTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TopScrollButtonTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TopScrollButtonTemplate();
	};
}


namespace demos
{
	class TreeViewTemplate : public demos::TreeViewTemplate_<demos::TreeViewTemplate>
	{
		friend class demos::TreeViewTemplate_<demos::TreeViewTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::TreeViewTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		TreeViewTemplate();
	};
}


namespace demos
{
	class VScrollHandleTemplate : public demos::VScrollHandleTemplate_<demos::VScrollHandleTemplate>
	{
		friend class demos::VScrollHandleTemplate_<demos::VScrollHandleTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::VScrollHandleTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		VScrollHandleTemplate();
	};
}


namespace demos
{
	class WindowTemplate : public demos::WindowTemplate_<demos::WindowTemplate>
	{
		friend class demos::WindowTemplate_<demos::WindowTemplate>;
		friend struct vl::reflection::description::CustomTypeDescriptorSelector<demos::WindowTemplate>;
	protected:

		// #region CLASS_MEMBER_GUIEVENT_HANDLER (DO NOT PUT OTHER CONTENT IN THIS #region.)
		// #endregion CLASS_MEMBER_GUIEVENT_HANDLER
	public:
		WindowTemplate();
	};
}



#endif
