#include "GacGen.h"

/***********************************************************************
Codegen::Utility
***********************************************************************/

void WriteFileComment(const WString& name, bool doNotModify, StreamWriter& writer)
{
	writer.WriteLine(L"/***********************************************************************");
	writer.WriteLine(L"Vczh Library++ 3.0");
	writer.WriteLine(L"Developer: Zihan Chen(vczh)");
	writer.WriteLine(L"GacUI::" + name);
	writer.WriteLine(L"");
	writer.WriteLine(L"This file is generated by: Vczh GacUI Resource Code Generator");
	if (doNotModify)
	{
		writer.WriteLine(L"************************************************************************");
		writer.WriteLine(L"DO NOT MODIFY");
	}
	writer.WriteLine(L"***********************************************************************/");
	writer.WriteLine(L"");
}

void FillReflectionNamespaces(List<WString>& namespaces)
{
	namespaces.Add(L"vl");
	namespaces.Add(L"reflection");
	namespaces.Add(L"description");
}

WString WriteNamespaceBegin(List<WString>& namespaces, StreamWriter& writer)
{
	WString prefix;
	FOREACH(WString, ns, namespaces)
	{
		writer.WriteLine(prefix + L"namespace " + ns);
		writer.WriteLine(prefix + L"{");
		prefix += L"\t";
	}
	return prefix;
}

void WriteNamespaceEnd(List<WString>& namespaces, StreamWriter& writer)
{
	FOREACH_INDEXER(WString, ns, index, namespaces)
	{
		WString prefix;
		for (vint i = 0; i < namespaces.Count() - index - 1; i++)
		{
			prefix += L"\t";
		}
		writer.WriteLine(prefix + L"}");
	}
}