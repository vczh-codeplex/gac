==================================================
Primitive Types
==================================================
sbyte		(Int8)
short		(Int16)
int			(Int32)
long		(Int64)
byte		(UInt8)
ushort		(UInt16)
uint		(UInt32)
ulong		(UInt64)
float		(Single)
double		(Double)
char		(Char)
bool		(Bool)
string		(String)
void		(Void)

==================================================
Composition Types
==================================================
[T]							// Array<T>
{T:U}						// Map<T, U>
(T..U)						// Pair<T, U>
(T, U, V)					// (T..(U..(V..void)))
T(U, V)						// Function<T, (U, V)>
T(.. U)						// Function<T, U>

using ComparablePair<T, U> = Pair<T, U>
	requires Comparable<T>, Comparable<U>;

==================================================
Structure Types
==================================================

struct Point
{
	int x;
	int y;
}

class Point<T>
{
	T x;
	T y;
}

==================================================
Functions
==================================================

// Compare: int(int, int)
int Compare(int a, int b)
{
	return a-b;
}

// Compare<T>: int(Point<T>, Point<T>)
int Compare<T>(Point<T> a, Point<T> b)
	requires Comparable<T>
{
	int result;
	result=Compare(a.x, b.x);
	if(result!=0) return result;
	result=Compare(a.y, b.y);
	if(result!=0) return result;
	return 0;
}

// Point.Move: void(Point, Size)
void Point.Move(Size s)
{
	this.x=1;	// this is const, and it is a struct, so this.x is not assignable
	s.x=1;		// parameter is const
}

// Point<T>.Move: void(Point<T>, Size<T>)
void Point<T>.Move(Size<T> s)
	// All requirements to T in Point<T> are copied
{
	this.x+=s.x;	// this is const, but it is a reference type. so this.x is assignable.
	this.y+=s.y;
}

==================================================
Concepts
==================================================

==================================================
Interfaces
==================================================

==================================================
Expressions
==================================================

==================================================
Statements
==================================================

==================================================
Continuation
==================================================

==================================================
Namespace
==================================================